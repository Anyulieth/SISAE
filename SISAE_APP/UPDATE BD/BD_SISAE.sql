-- MySQL Script generated by MySQL Workbench
-- 09/05/17 14:58:42
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';

-- -----------------------------------------------------
-- Schema SISAE
-- -----------------------------------------------------
DROP SCHEMA IF EXISTS `SISAE` ;

-- -----------------------------------------------------
-- Schema SISAE
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `SISAE` DEFAULT CHARACTER SET utf8 ;

USE `SISAE` ;

-- -----------------------------------------------------
-- Table `SISAE`.`UsuTb01`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `UsuTb01` (
  `VcUsuTb01_Cedula` VARCHAR(20) NOT NULL,
  `VcUsuTb01_Nombre` VARCHAR(20) NOT NULL,
  `VcUsuTb01_Ape1` VARCHAR(20) NOT NULL,
  `VcUsuTb01_Ape2` VARCHAR(20) NOT NULL,
  `VcUsuTb01_Direccion` VARCHAR(100) NOT NULL,
  `CrUsuTb01_Sexo` CHAR(1) NOT NULL,
  `VcUsuTb01_Telefono` VARCHAR(8) NOT NULL,
  `VcUsuTb01_Email` VARCHAR(100) NOT NULL,
  PRIMARY KEY (`VcUsuTb01_Cedula`))
ENGINE = INNODB;

-- -----------------------------------------------------
-- Table `SISAE`.`AdmTb02`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `AdmTb02` (
  `VcAdmTb02_IdAdmin` VARCHAR(20) NOT NULL,
  `VcAdmTb02_Clave` VARCHAR(20) NOT NULL)
ENGINE = INNODB DEFAULT CHARSET=utf8;

-- -----------------------------------------------------
-- Table `SISAE`.`EstTb03`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `EstTb03` (
  `VcEstTb03_IdEstudiante` VARCHAR(20) NOT NULL,
  `DtEstTb03_FechaNac` DATE NOT NULL,
  `VcEstTb03_Adecuacion` VARCHAR(20) NOT NULL,
  `VcEstTb03_Estado` VARCHAR(20) NOT NULL,
  `InEspecialidadTb16_IdEspecialidad` INT NOT NULL,
  PRIMARY KEY (`VcEstTb03_IdEstudiante`))
ENGINE = INNODB;

-- -----------------------------------------------------
-- Table `SISAE`.`ProfTb04`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `ProfTb04` (
  `VcProfTb04_IdProfesor` VARCHAR(20) NOT NULL,
  `VcProfTb04_Clave` VARCHAR(20) NOT NULL,
  `DtProfTb04_FechaNac` DATE NOT NULL,
  `VcProfTb04_Estado` VARCHAR(20) NOT NULL,
  PRIMARY KEY (`VcProfTb04_IdProfesor`))
ENGINE = INNODB;
-- -----------------------------------------------------
-- Table `SISAE`.`EncTb05`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `EncTb05` (
  `VcEncTb05_IdEncargado` VARCHAR(20) NOT NULL,
  `VcEncTb05_Clave` VARCHAR(20) NOT NULL,
  PRIMARY KEY (`VcEncTb05_IdEncargado`))
ENGINE = INNODB;

-- -----------------------------------------------------
-- Table `SISAE`.`FunTb06`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `FunTb06` (
  `VcFunTb06_IdFuncionario` VARCHAR(20) NOT NULL,
  `VcFunTb06_Clave` VARCHAR(20) NOT NULL,
  `DtFunTb06_FechaNac` DATE NOT NULL,
  `VcFunTb06_Estado` VARCHAR(20) NOT NULL,
  PRIMARY KEY (`VcFunTb06_IdFuncionario`))
ENGINE = INNODB;

-- -----------------------------------------------------
-- Table `SISAE`.`EstEncTb07`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `EstEncTb07` (
  `VcEncTb05_IdEncargado` VARCHAR(20) NOT NULL,
  `VcEstTb03_IdEstudiante` VARCHAR(20) NOT NULL)
ENGINE = INNODB;

-- -----------------------------------------------------
-- Table `SISAE`.`AsistColeTb08`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `AsistColeTb08` (
  `InAsistColeTb08_IdAsistCole` INT NOT NULL,
  `TmAsistColeTb08_HoraEntrada` TIME NOT NULL,
  `DtAsistColeTb08_FechaEntrada` DATE NOT NULL,
  `TmAsistColeTb08_HoraSalida` TIME NOT NULL,
  `DtAsistColeTb08_FechaSalida` DATE NOT NULL,
  `VcEstTb03_IdEstudiante` VARCHAR(20) NOT NULL,
  PRIMARY KEY (`InAsistColeTb08_IdAsistCole`))
ENGINE = INNODB;

-- -----------------------------------------------------
-- Table `SISAE`.`EncRepTb09`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `EncRepTb09` (
  `VcEncTb05_IdEncargado` VARCHAR(20) NOT NULL,
  `InRepTb10_IdReporte` INT NOT NULL)
ENGINE = INNODB;

-- -----------------------------------------------------
-- Table `SISAE`.`RepTb10`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `RepTb10` (
  `InRepTb10_IdReporte` INT NOT NULL,
  `DtRepTb10_FechaReporte` DATE NOT NULL,
  `TmRepTb10_HoraReporte` TIME NOT NULL,
  `InAsistClaseTb18_IdAsistClase` INT NOT NULL,
  PRIMARY KEY (`InRepTb10_IdReporte`))
ENGINE = INNODB;

-- -----------------------------------------------------
-- Table `SISAE`.`InscMateriaTb11`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `InscMateriaTb11` (
  `VcEstTb03_IdEstudiante` VARCHAR(20) NOT NULL,
  `InMateriaTb17_IdMateria` INT NOT NULL)
ENGINE = INNODB;

-- -----------------------------------------------------
-- Table `SISAE`.`AsigGradoTb12`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `AsigGradoTb12` (
  `InGradoTb13_IdGrado` INT NOT NULL,
  `VcProfTb04_IdProf` VARCHAR(20) NOT NULL)
ENGINE = INNODB;

-- -----------------------------------------------------
-- Table `SISAE`.`GradoTb13`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `GradoTb13` (
  `InGradoTb13_IdGrado` INT NOT NULL,
  `VcGradoTb13_NombreGrado` VARCHAR(20) NOT NULL,
  `InBachillerTb14_IdBachiller` INT NOT NULL,
  PRIMARY KEY (`InGradoTb13_IdGrado`))
ENGINE = INNODB;

-- -----------------------------------------------------
-- Table `SISAE`.`BachillerTb14`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `BachillerTb14` (
  `InBachillerTb14_IdBachiller` INT NOT NULL,
  `VcBachillerTb14_NombreBachiller` VARCHAR(50) NOT NULL,
  PRIMARY KEY (`InBachillerTb14_IdBachiller`))
ENGINE = INNODB;

-- -----------------------------------------------------
-- Table `SISAE`.`GradoEspTb15`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `GradoEspTb15` (
  `InGradoTb13_IdGrado` INT NOT NULL,
  `InEspecialidadTb16_IdEspecialidad` INT NOT NULL)
ENGINE = INNODB;

-- -----------------------------------------------------
-- Table `SISAE`.`EspecialidadTb16`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `EspecialidadTb16` (
  `InEspecialidadTb16_IdEspecialidad` INT NOT NULL,
  `VcEspecialidadTb16_Nombre` VARCHAR(20) NOT NULL,
  `InEspecialidadTb16_Cupo` INT NOT NULL,
  PRIMARY KEY (`InEspecialidadTb16_IdEspecialidad`))
ENGINE = INNODB;

-- -----------------------------------------------------
-- Table `SISAE`.`MateriaTb17`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `MateriaTb17` (
  `InMateriaTb17_IdMateria` INT NOT NULL,
  `VcMateriaTb17_Nombre` VARCHAR(20) NOT NULL,
  PRIMARY KEY (`InMateriaTb17_IdMateria`))
ENGINE = INNODB;

-- -----------------------------------------------------
-- Table `SISAE`.`AsistClaseTb18`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `AsistClaseTb18` (
  `InAsistClaseTb18_IdAsistClase` INT NOT NULL,
  `DtAsistClaseTb18_Fecha` DATE NOT NULL,
  `TmAsistClaseTb18_Hora` TIME NOT NULL,
  `VcAsistClaseTb18_Estado` VARCHAR(20) NOT NULL,
  `InMateriaTb17_IdMateria` INT NOT NULL,
  PRIMARY KEY (`InAsistClaseTb18_IdAsistClase`))
ENGINE = INNODB;

-- -----------------------------------------------------
-- Table `SISAE`.`AsigMateriaTb19`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `AsigMateriaTb19` (
  `VcProfTb04_IdProfesor` VARCHAR(20) NOT NULL,
  `InMateriaTb17_IdMateria` INT NOT NULL)
ENGINE = INNODB;

-- -----------------------------------------------------
-- Table `SISAE`.`SeccionTb20`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `SeccionTb20` (
  `InSeccionTb20_IdSeccion` INT NOT NULL,
  `InSeccionTb20_Num_Grupo` INT NOT NULL,
  `InSeccionTb20_Cupo` INT NOT NULL,
  PRIMARY KEY (`InSeccionTb20_IdSeccion`))
ENGINE = INNODB;

-- -----------------------------------------------------
-- Table `SISAE`.`FuncRepTb21`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `FuncRepTb21` (
  `VcFunTb06_IdFuncionario` VARCHAR(20) NOT NULL,
  `InRepTb10_IdReporte` INT NOT NULL)
ENGINE = INNODB;

-- -----------------------------------------------------
-- Table `SISAE`.`EstRepTb22`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `EstRepTb22` (
  `VcEstTb03_IdEstudiante` VARCHAR(20) NOT NULL,
  `InRepTb10_IdReporte` INT NOT NULL)
ENGINE = INNODB;

-- -----------------------------------------------------
-- Table `SISAE`.`AsistEstTb23`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `AsistEstTb23` (
  `InAsistClaseTb18_IdAsistClase` INT NOT NULL,
  `VcEstTb03_IdEstudiante` VARCHAR(20) NOT NULL)
ENGINE = INNODB;

-- -----------------------------------------------------
-- Table `SISAE`.`ProfRepTb24`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `ProfRepTb24` (
  `VcProfTb04_IdProfesor` VARCHAR(20) NOT NULL,
  `InRepTb10_IdReporte` INT NOT NULL)
ENGINE = INNODB;

-- -----------------------------------------------------
-- Table `SISAE`.`SecGradoTb25`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `SecGradoTb25` (
  `InGradoTb13_IdGrado` INT NOT NULL,
  `InSeccionTb20_IdSeccion` INT NOT NULL)
ENGINE = INNODB;

-- -----------------------------------------------------
-- Table `SISAE`.`GraEstTb26`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `GraEstTb26` (
  `VcEstTb03_IdEstudiante` VARCHAR(20) NOT NULL,
  `InGradoTb13_IdGrado` INT NOT NULL)
ENGINE = INNODB;

-- -----------------------------------------------------
-- Table `SISAE`.`SeccionProfTb27`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `SeccionProfTb27` (
  `VcProfTb04_IdProfesor` VARCHAR(20) NOT NULL,
  `InSeccionTb20_IdSeccion` INT NOT NULL)
ENGINE = INNODB;

-- -----------------------------------------------------
-- Table `SISAE`.`SecEstTb28`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `SecEstTb28` (
   `VcEstTb03_IdEstudiante` VARCHAR(20) NOT NULL,
  `InSeccionTb20_IdSeccion` INT NOT NULL
) ENGINE=INNODB;

-- -----------------------------------------------------
-- Table `SISAE`.`HorariosTb29`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `HorariosTb29` (
  `InHorariosTb29_IdHorario` INT NOT NULL,
  `VcHorariosTb29_Dia` VARCHAR(20) NOT NULL,
  `TmHorariosTb29_Hora_Inicio` TIME NOT NULL,
  `TmHorariosTb29_Hora_Final` TIME NOT NULL
) ENGINE=INNODB;

-- -----------------------------------------------------
-- Table `SISAE`.`MatriculaTb30`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `matriculatb30` (
  `InSeccionTb20_IdSeccion` INT NOT NULL,
  `InHorariosTb29_IdHorario` INT NOT NULL,
  `InMateriaTb17_IdMateria` INT NOT NULL,
  `VcProfTb04_IdProfesor` VARCHAR(20) NOT NULL
) ENGINE=INNODB;

-- -----------------------------------------------------
-- Table `SISAE`.`SeguridadTb31`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `SeguridadTb31` (
  `VcSeguridadTb31_Funcion` VARCHAR(150) NOT NULL,
  `VcSeguridadTb31_Glyphicons` VARCHAR(150) NOT NULL,
  `VcSeguridadTb31_SideNav` VARCHAR(150) NOT NULL,
  `InSeguridadTb31_Id` INT NOT NULL,
  `InSeguridadTb31_Nivel` INT NOT NULL
) ENGINE=INNODB;

-- -----------------------------------------------------
-- RELACIONES DE TABLAS
-- -----------------------------------------------------

ALTER TABLE `EstTb03`
  ADD CONSTRAINT `FK_Especialidad` FOREIGN KEY (`InEspecialidadTb16_IdEspecialidad`)
  REFERENCES `EspecialidadTb16` (`InEspecialidadTb16_IdEspecialidad`) ON DELETE NO ACTION ON UPDATE NO ACTION;
  
ALTER TABLE `EstEncTb07`
  ADD CONSTRAINT `FK_Est` FOREIGN KEY (`VcEstTb03_IdEstudiante`)
  REFERENCES  `EstTb03` (`VcEstTb03_IdEstudiante`) ON DELETE NO ACTION ON UPDATE NO ACTION,
  ADD CONSTRAINT `FK_Enc` FOREIGN KEY (`VcEncTb05_IdEncargado`)
  REFERENCES  `EncTb05` (`VcEncTb05_IdEncargado`) ON DELETE NO ACTION ON UPDATE NO ACTION;
  
ALTER TABLE `AsistColeTb08`
  ADD CONSTRAINT `FK_Est_Asis` FOREIGN KEY (`VcEstTb03_IdEstudiante`)
  REFERENCES `EstTb03` (`VcEstTb03_IdEstudiante`) ON DELETE NO ACTION ON UPDATE NO ACTION;
ALTER TABLE `asistcoletb08`
  MODIFY `InAsistColeTb08_IdAsistCole` INT(11) NOT NULL AUTO_INCREMENT;
  
ALTER TABLE `EncRepTb09` 
  ADD CONSTRAINT `FK_Enc_Rep` FOREIGN KEY (`VcEncTb05_IdEncargado`)
  REFERENCES  `EncTb05` (`VcEncTb05_IdEncargado`) ON DELETE NO ACTION ON UPDATE NO ACTION,
  ADD CONSTRAINT `FK_Id_Rep` FOREIGN KEY (`InRepTb10_IdReporte`)
  REFERENCES  `RepTb10` (`InRepTb10_IdReporte`) ON DELETE NO ACTION ON UPDATE NO ACTION;
 
ALTER TABLE `RepTb10`
  ADD CONSTRAINT `FK_AsCla` FOREIGN KEY (`InAsistClaseTb18_IdAsistClase`)
  REFERENCES `AsistClaseTb18` (`InAsistClaseTb18_IdAsistClase`) ON DELETE NO ACTION ON UPDATE NO ACTION;
ALTER TABLE `reptb10`
 MODIFY `InRepTb10_IdReporte` INT(11) NOT NULL AUTO_INCREMENT;
 
ALTER TABLE `InscMateriaTb11`
  ADD CONSTRAINT `FK_Est_Mate` FOREIGN KEY (`VcEstTb03_IdEstudiante`)
  REFERENCES `EstTb03` (`VcEstTb03_IdEstudiante`) ON DELETE NO ACTION ON UPDATE NO ACTION,
  ADD CONSTRAINT `FK_Id_Mate` FOREIGN KEY (`InMateriaTb17_IdMateria`)
  REFERENCES `MateriaTb17` (`InMateriaTb17_IdMateria`) ON DELETE NO ACTION ON UPDATE NO ACTION;
 
ALTER TABLE `AsigGradoTb12`
  ADD CONSTRAINT `FK_Prof` FOREIGN KEY (`VcProfTb04_IdProf`)
  REFERENCES `ProfTb04` (`VcProfTb04_IdProfesor`) ON DELETE NO ACTION ON UPDATE NO ACTION,
  ADD CONSTRAINT `FK_Gra` FOREIGN KEY (`InGradoTb13_IdGrado`)
  REFERENCES `GradoTb13` (`InGradoTb13_IdGrado`) ON DELETE NO ACTION ON UPDATE NO ACTION;
 
 ALTER TABLE `GradoTb13`
  ADD CONSTRAINT `FK_Bac` FOREIGN KEY (`InBachillerTb14_IdBachiller`)
  REFERENCES `BachillerTb14` (`InBachillerTb14_IdBachiller`) ON DELETE NO ACTION ON UPDATE NO ACTION;
ALTER TABLE `GradoTb13`
 MODIFY `InGradoTb13_IdGrado` INT(11) NOT NULL AUTO_INCREMENT;
  
ALTER TABLE `bachillertb14`
 MODIFY `InBachillerTb14_IdBachiller` INT(11) NOT NULL AUTO_INCREMENT;
  
ALTER TABLE `GradoEspTb15`
  ADD CONSTRAINT `FK_Esp_Gra` FOREIGN KEY (`InEspecialidadTb16_IdEspecialidad`)
  REFERENCES `EspecialidadTb16` (`InEspecialidadTb16_IdEspecialidad`) ON DELETE NO ACTION ON UPDATE NO ACTION,
  ADD CONSTRAINT `FK_Gra_Esp` FOREIGN KEY (`InGradoTb13_IdGrado`)
  REFERENCES `GradoTb13` (`InGradoTb13_IdGrado`) ON DELETE NO ACTION ON UPDATE NO ACTION;
 
ALTER TABLE `especialidadtb16`
  MODIFY `InEspecialidadTb16_IdEspecialidad` INT(11) NOT NULL AUTO_INCREMENT;
  
ALTER TABLE `materiatb17`
  MODIFY `InMateriaTb17_IdMateria` INT(11) NOT NULL AUTO_INCREMENT;
  
ALTER TABLE`AsistClaseTb18`
  ADD CONSTRAINT `FK_Materi` FOREIGN KEY (`InMateriaTb17_IdMateria`)
  REFERENCES `MateriaTb17` (`InMateriaTb17_IdMateria`) ON DELETE NO ACTION ON UPDATE NO ACTION;
ALTER TABLE `AsistClaseTb18`
  MODIFY `InAsistClaseTb18_IdAsistClase` INT(11) NOT NULL AUTO_INCREMENT;

ALTER TABLE `AsigMateriaTb19`
  ADD CONSTRAINT `FK_Profes_M` FOREIGN KEY (`VcProfTb04_IdProfesor`)
  REFERENCES `ProfTb04` (`VcProfTb04_IdProfesor`) ON DELETE NO ACTION ON UPDATE NO ACTION,
  ADD CONSTRAINT `FK_Matt_P` FOREIGN KEY (`InMateriaTb17_IdMateria`)
  REFERENCES `MateriaTb17` (`InMateriaTb17_IdMateria`) ON DELETE NO ACTION ON UPDATE NO ACTION;
 
ALTER TABLE `FuncRepTb21`
  ADD CONSTRAINT `FK_Fun` FOREIGN KEY (`VcFunTb06_IdFuncionario`)
  REFERENCES `FunTb06` (`VcFunTb06_IdFuncionario`) ON DELETE NO ACTION ON UPDATE NO ACTION,
  ADD CONSTRAINT `FK_Rep_Func` FOREIGN KEY (`InRepTb10_IdReporte`)
  REFERENCES `RepTb10` (`InRepTb10_IdReporte`) ON DELETE NO ACTION ON UPDATE NO ACTION;
 
ALTER TABLE `secciontb20`
  MODIFY `InSeccionTb20_IdSeccion` INT(11) NOT NULL AUTO_INCREMENT;
  
ALTER TABLE `EstRepTb22`
  ADD CONSTRAINT `FK_Est_R` FOREIGN KEY (`VcEstTb03_IdEstudiante`)
  REFERENCES `EstTb03` (`VcEstTb03_IdEstudiante`) ON DELETE NO ACTION ON UPDATE NO ACTION,
  ADD CONSTRAINT `FK_Rep_E` FOREIGN KEY (`InRepTb10_IdReporte`)
  REFERENCES `RepTb10` (`InRepTb10_IdReporte`) ON DELETE NO ACTION ON UPDATE NO ACTION;

ALTER TABLE `AsistEstTb23`
  ADD CONSTRAINT `FK_A_Estu` FOREIGN KEY (`VcEstTb03_IdEstudiante`)
  REFERENCES `EstTb03` (`VcEstTb03_IdEstudiante`) ON DELETE NO ACTION ON UPDATE NO ACTION,
  ADD CONSTRAINT `FK_As_Cla` FOREIGN KEY (`InAsistClaseTb18_IdAsistClase`)
  REFERENCES `AsistClaseTb18` (`InAsistClaseTb18_IdAsistClase`) ON DELETE NO ACTION ON UPDATE NO ACTION;

ALTER TABLE `ProfRepTb24`
  ADD CONSTRAINT `FK_Prof_R` FOREIGN KEY (`VcProfTb04_IdProfesor`)
  REFERENCES `ProfTb04`(`VcProfTb04_IdProfesor`) ON DELETE NO ACTION ON UPDATE NO ACTION,
  ADD CONSTRAINT `FK_Rep_P` FOREIGN KEY (`InRepTb10_IdReporte`)
  REFERENCES `RepTb10` (`InRepTb10_IdReporte`) ON DELETE NO ACTION ON UPDATE NO ACTION;

ALTER TABLE `SecGradoTb25`
  ADD CONSTRAINT `FK_S_Gra` FOREIGN KEY (`InGradoTb13_IdGrado`)
  REFERENCES `GradoTb13` (`InGradoTb13_IdGrado`) ON DELETE CASCADE ON UPDATE CASCADE,
  ADD CONSTRAINT `FK_Sec_G` FOREIGN KEY (`InSeccionTb20_IdSeccion`)
  REFERENCES `SeccionTb20` (`InSeccionTb20_IdSeccion`) ON DELETE CASCADE ON UPDATE CASCADE;

ALTER TABLE `GraEstTb26`
  ADD CONSTRAINT `FK_Gra_E` FOREIGN KEY (`InGradoTb13_IdGrado`)
  REFERENCES `GradoTb13` (`InGradoTb13_IdGrado`) ON DELETE CASCADE ON UPDATE CASCADE,
  ADD CONSTRAINT `FK_G_Est` FOREIGN KEY (`VcEstTb03_IdEstudiante`)
  REFERENCES `EstTb03` (`VcEstTb03_IdEstudiante`) ON DELETE CASCADE ON UPDATE CASCADE;

ALTER TABLE `SeccionProfTb27`
  ADD CONSTRAINT `FK_Prof_S` FOREIGN KEY (`VcProfTb04_IdProfesor`)
  REFERENCES `ProfTb04` (`VcProfTb04_IdProfesor`) ON DELETE CASCADE ON UPDATE CASCADE,
  ADD CONSTRAINT `FK_Sec_P` FOREIGN KEY (`InSeccionTb20_IdSeccion`)
  REFERENCES `SeccionTb20` (`InSeccionTb20_IdSeccion`) ON DELETE CASCADE ON UPDATE CASCADE;

ALTER TABLE `secesttb28`
 ADD CONSTRAINT `FK_Sec_Est` FOREIGN KEY (`VcEstTb03_IdEstudiante`)
 REFERENCES EstTb03 (`VcEstTb03_IdEstudiante`) ON DELETE CASCADE ON UPDATE CASCADE,
 ADD CONSTRAINT `FK_Est_Sec` FOREIGN KEY (`InSeccionTb20_IdSeccion`)
 REFERENCES SeccionTb20 (`InSeccionTb20_IdSeccion`) ON DELETE CASCADE ON UPDATE CASCADE;

 ALTER TABLE `horariostb29`
  ADD PRIMARY KEY (`InHorariosTb29_IdHorario`);
ALTER TABLE `horariostb29`
  MODIFY `InHorariosTb29_IdHorario` INT(11) NOT NULL AUTO_INCREMENT;
  
ALTER TABLE `matriculatb30`
  ADD UNIQUE KEY `FK_Prof_Matri` (`VcProfTb04_IdProfesor`),
  ADD KEY `FK_Sec_Matri` (`InSeccionTb20_IdSeccion`),
  ADD KEY `FK_Hor_Matri` (`InHorariosTb29_IdHorario`),
  ADD KEY `FK_Mat_Matri` (`InMateriaTb17_IdMateria`);
  
ALTER TABLE `seguridadtb31`
  ADD PRIMARY KEY (`InSeguridadTb31_Id`);
ALTER TABLE `seguridadtb31`
  MODIFY `InSeguridadTb31_Id` INT(11) NOT NULL AUTO_INCREMENT;

SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;


/**************************************************************************************************************************************************************/

-- -----------------------------------------------------
-- PROCEDIMIENTOS ALMACENADOS
-- -----------------------------------------------------

-- -----------------------------------------------------
-- VALIDAR USUARIOS
-- -----------------------------------------------------

/* Determina si es profesor */
DROP PROCEDURE IF EXISTS PaUsuProf;
DELIMITER $
CREATE PROCEDURE PaUsuProf(IN id VARCHAR(20), IN cla VARCHAR(20))
BEGIN
	SELECT 
    IF(p.VcProfTb04_IdProfesor  = id AND p.VcProfTb04_Clave = cla,'Profesor', 'No existe') AS Tipo
    FROM ProfTb04 AS p INNER JOIN usutb01 AS u ON p.VcProfTb04_IdProfesor = u.VcUsuTb01_Cedula
  WHERE p.VcProfTb04_IdProfesor = id;
END $

/* Determina si es funcionario */
DROP PROCEDURE IF EXISTS PaUsuFunc;
DELIMITER $
CREATE PROCEDURE PaUsuFunc(IN id VARCHAR(20), IN cla VARCHAR(20))
BEGIN
	SELECT 
    IF(f.VcFunTb06_IdFuncionario  = id AND f.VcFunTb06_Clave = cla,'Funcionario', 'No existe') AS Tipo
    FROM funtb06 AS f INNER JOIN usutb01 AS u ON f.VcFunTb06_IdFuncionario = u.VcUsuTb01_Cedula
  WHERE f.VcFunTb06_IdFuncionario = id;
END $

/* Determina si es encargado */
DROP PROCEDURE IF EXISTS PaUsuEnc;
DELIMITER $
CREATE PROCEDURE PaUsuEnc(IN id VARCHAR(20), IN cla VARCHAR(20))
BEGIN
	SELECT 
    IF(e.VcEncTb05_IdEncargado  = id AND e.VcEncTb05_Clave = cla,'Encargado', 'No existe') AS Tipo
    FROM EncTb05 AS e INNER JOIN usutb01 AS u ON e.VcEncTb05_IdEncargado = u.VcUsuTb01_Cedula
  WHERE e.VcEncTb05_IdEncargado = id;
END $

/* Determina si es administrador */
DROP PROCEDURE IF EXISTS PaUsuAdmin;
DELIMITER $
CREATE PROCEDURE PaUsuAdmin(IN id VARCHAR(20), IN cla VARCHAR(20))
BEGIN
	SELECT 
    IF(admtb02.VcAdmTb02_IdAdmin  = id AND admtb02.VcAdmTb02_Clave= cla,'Administrador', 'No existe') AS Tipo
    FROM admtb02 
  WHERE admtb02.VcAdmTb02_IdAdmin = id;
END $

/* Llama procedimientos que identifican tipo de usuario */
DROP PROCEDURE IF EXISTS PaValidaUsuario;
DELIMITER $
CREATE PROCEDURE PaValidaUsuario(IN idusu VARCHAR(20), IN clave VARCHAR(20), OUT tipo VARCHAR(20))
BEGIN
	CALL PaUsuEnc(idusu, clave);
	CALL PaUsuAdmin(idusu, clave);
	CALL PaUsuProf(idusu, clave);
    CALL PaUsuFunc(idusu, clave);
END $

/**************************************************************************************************************************************************************/

-- -----------------------------------------------------
-- ESTUDIANTE
-- -----------------------------------------------------

    /* EstTb03 */
/* Guardar Estudiante */
DROP PROCEDURE IF EXISTS PaEstTb03_GuardarEst;
DELIMITER $
CREATE PROCEDURE PaEstTb03_GuardarEst (IN IdEst VARCHAR(20),  IN FecNacEst DATE, IN Adecuacion VARCHAR(20), 
IN Estado VARCHAR(20), IN IdEspecialidad INT, IN NomEst VARCHAR(20), IN Ape1 VARCHAR(20), IN Ape2 VARCHAR(20), 
IN Direccion VARCHAR(20), IN Sexo CHAR(1), IN Telefono VARCHAR(8), IN Email VARCHAR(100))
BEGIN
	INSERT INTO UsuTb01(VcUsuTb01_Cedula, VcUsuTb01_Nombre, VcUsuTb01_Ape1, VcUsuTb01_Ape2, VcUsuTb01_Direccion, CrUsuTb01_Sexo, VcUsuTb01_Telefono, VcUsuTb01_Email)
    VALUES(IdEst, NomEst, Ape1, Ape2, Direccion, Sexo, Telefono, Email);
     INSERT INTO EstTb03 (VcEstTb03_IdEstudiante, DtEstTb03_FechaNac, VcEstTb03_Adecuacion, VcEstTb03_Estado, InEspecialidadTb16_IdEspecialidad)
    VALUES (IdEst, FecNacEst, Adecuacion, Estado, IdEspecialidad);
END $ 

/* Actualizar Estudiante */
DROP PROCEDURE IF EXISTS PaEstTb03_ActualizarEst;
DELIMITER $
CREATE PROCEDURE PaEstTb03_ActualizarEst(IN cedula VARCHAR(20), IN FechaNac DATE, IN idesp INT(11),
IN Nombre VARCHAR(20),IN Ape1 VARCHAR(20),IN Ape2 VARCHAR(20), IN Direccion VARCHAR(100), 
IN Telefono VARCHAR(20), IN email VARCHAR(20))  
BEGIN
UPDATE esttb03,usutb01 SET esttb03.DtEstTb03_FechaNac = FechaNac,usutb01.VcUsuTb01_Nombre = Nombre,usutb01.VcUsuTb01_Ape1 = Ape1,
usutb01.VcUsuTb01_Ape2 = Ape2,esttb03.InEspecialidadTb16_IdEspecialidad = idesp ,usutb01.VcUsuTb01_Direccion = Direccion,
usutb01.VcUsuTb01_Telefono = Telefono,usutb01.VcUsuTb01_Email = email
WHERE usutb01.VcUsuTb01_Cedula = cedula AND esttb03.VcEstTb03_IdEstudiante = cedula;
END $;

/* Listar Estudiante */
DROP PROCEDURE IF EXISTS PaEstTb03_Listar;
DELIMITER $
CREATE PROCEDURE PaEstTb03_Listar(IN inicio INT, IN final INT)
BEGIN
 SELECT UsuTb01.VcUsuTb01_Cedula AS 'Cedula', UsuTb01.VcUsuTb01_Nombre  AS 'Nombre', UsuTb01.VcUsuTb01_Ape1  AS 'Apellido1',
 UsuTb01.VcUsuTb01_Ape2  AS 'Apellido2', especialidadtb16.VcEspecialidadTb16_Nombre AS 'Especialidad', 
 UsuTb01.VcUsuTb01_Direccion AS 'Direccion', UsuTb01.CrUsuTb01_Sexo AS 'Genero', UsuTb01.VcUsuTb01_Telefono AS 'Telefono', 
 UsuTb01.VcUsuTb01_Email AS 'Email', EstTb03.DtEstTb03_FechaNac AS 'FechaNac',EstTb03.VcEstTb03_Adecuacion AS 'Adecuacion', EstTb03.VcEstTb03_Estado AS 'Estado'
    FROM UsuTb01, EstTb03,especialidadtb16
    WHERE EstTb03.VcEstTb03_IdEstudiante = UsuTb01.VcUsuTb01_Cedula AND esttb03.InEspecialidadTb16_IdEspecialidad = especialidadtb16.InEspecialidadTb16_IdEspecialidad
	ORDER BY 'date added' LIMIT inicio,final;
END $

/* Listar Estudiante Activos*/
DROP PROCEDURE IF EXISTS PaEstTb03_ListarActivos;
DELIMITER $
CREATE PROCEDURE PaEstTb03_ListarActivos ()
BEGIN
 SELECT UsuTb01.VcUsuTb01_Cedula AS 'Cedula', UsuTb01.VcUsuTb01_Nombre  AS 'Nombre', UsuTb01.VcUsuTb01_Ape1  AS 'Apellido1',
 UsuTb01.VcUsuTb01_Ape2  AS 'Apellido2', EspecialidadTb16.VcEspecialidadTb16_Nombre AS 'Especialidad', 
 UsuTb01.VcUsuTb01_Direccion AS 'Direccion', UsuTb01.CrUsuTb01_Sexo AS 'Genero', UsuTb01.VcUsuTb01_Telefono AS 'Telefono', 
 UsuTb01.VcUsuTb01_Email AS 'Email', EstTb03.DtEstTb03_FechaNac AS 'FechaNac', EstTb03.VcEstTb03_Adecuacion AS 'Adecuacion', EstTb03.VcEstTb03_Estado AS 'Estado'
    FROM UsuTb01, EstTb03, EspecialidadTb16
    WHERE EstTb03.VcEstTb03_IdEstudiante = UsuTb01.VcUsuTb01_Cedula AND esttb03.VcEstTb03_Estado = 'A' AND EspecialidadTb16.InEspecialidadTb16_IdEspecialidad = EstTb03.InEspecialidadTb16_IdEspecialidad
	ORDER BY EstTb03.VcEstTb03_IdEstudiante;
END $


/* Listar Usuarios */
DROP PROCEDURE IF EXISTS PaUsuTb01_ListarUsuarios;
DELIMITER $
CREATE PROCEDURE PaUsuTb01_ListarUsuarios ()
BEGIN
 SELECT UsuTb01.VcUsuTb01_Cedula AS 'Cedula', 
 concat(UsuTb01.VcUsuTb01_Nombre, ' ', UsuTb01.VcUsuTb01_Ape1, ' ',UsuTb01.VcUsuTb01_Ape2)  AS 'Nombre'
 FROM UsuTb01 
	ORDER BY 'date added';
END $

/* Tipo Usuarios */
DROP PROCEDURE IF EXISTS PaUsuTb01_TipoUsu;
DELIMITER $
CREATE PROCEDURE PaUsuTb01_TipoUsu (in nivel int)
BEGIN
	 if exists(select SeguridadTb31.InSeguridadTb31_Nivel from SeguridadTb31
     where nivel = 1) /* Administrador */
     then select VcSeguridadTb31_Funcion, VcSeguridadTb31_Glyphicons,VcSeguridadTb31_SideNav 
     from SeguridadTb31 where InSeguridadTb31_Nivel = 1;
	elseif exists (select SeguridadTb31.InSeguridadTb31_Nivel from SeguridadTb31
     where nivel = 2) /* Profesor */
     then select VcSeguridadTb31_Funcion, VcSeguridadTb31_Glyphicons,VcSeguridadTb31_SideNav 
     from SeguridadTb31 where InSeguridadTb31_Nivel = 2;
	elseif exists (select SeguridadTb31.InSeguridadTb31_Nivel from SeguridadTb31
     where nivel = 3) /* Encargado */
     then select VcSeguridadTb31_Funcion, VcSeguridadTb31_Glyphicons,VcSeguridadTb31_SideNav 
     from SeguridadTb31 where InSeguridadTb31_Nivel = 3;
	elseif exists (select SeguridadTb31.InSeguridadTb31_Nivel from SeguridadTb31
     where nivel = 4) /* Funcionario */
     then select VcSeguridadTb31_Funcion, VcSeguridadTb31_Glyphicons,VcSeguridadTb31_SideNav 
     from SeguridadTb31 where InSeguridadTb31_Nivel = 4;
     end if;
END $

/* Buscar Estudiante */
DROP PROCEDURE IF EXISTS PaEstTb03_BuscarEst;
DELIMITER $
CREATE PROCEDURE PaEstTb03_BuscarEst(IN cedula VARCHAR(20))
BEGIN
	SELECT u.VcUsuTb01_Cedula AS 'Cedula', u.VcUsuTb01_Nombre AS 'Nombre', u.VcUsuTb01_Ape1 AS 'Apellido1',
    u.VcUsuTb01_Ape2 AS 'Apellido2', s.VcEspecialidadTb16_Nombre AS 'Especialidad', u.VcUsuTb01_Direccion AS 'Direccion',
    u.CrUsuTb01_Sexo AS 'Genero', u.VcUsuTb01_Telefono AS 'Telefono', u.VcUsuTb01_Email AS 'Email', 
    e.DtEstTb03_FechaNac AS 'Fecha_Nac', e.VcEstTb03_Adecuacion AS 'Adecuacion', e.VcEstTb03_Estado AS 'Estado'
  FROM esttb03 AS e INNER JOIN usutb01 AS u ON e.VcEstTb03_IdEstudiante = u.VcUsuTb01_Cedula 
  JOIN especialidadtb16 AS s ON e.InEspecialidadTb16_IdEspecialidad = s.InEspecialidadTb16_IdEspecialidad
  WHERE e.VcEstTb03_IdEstudiante = cedula;
END $

/* Buscar Estudiante CUALQUIER PARAMETRO*/
DROP PROCEDURE IF EXISTS PaEstTb03_BuscarEstD;
DELIMITER $
CREATE PROCEDURE PaEstTb03_BuscarEstD(IN dato VARCHAR(20))
BEGIN
	SELECT u.VcUsuTb01_Cedula AS 'Cedula', u.VcUsuTb01_Nombre AS 'Nombre', u.VcUsuTb01_Ape1 AS 'Apellido1',
    u.VcUsuTb01_Ape2 AS 'Apellido2', s.VcEspecialidadTb16_Nombre AS 'Especialidad', u.VcUsuTb01_Direccion AS 'Direccion', u.CrUsuTb01_Sexo AS 'Genero',
    u.VcUsuTb01_Telefono AS 'Telefono', u.VcUsuTb01_Email AS 'Email', e.DtEstTb03_FechaNac AS 'Fecha_Nac',
	e.VcEstTb03_Adecuacion AS 'Adecuacion', e.VcEstTb03_Estado AS 'Estado'
  FROM esttb03 AS e INNER JOIN usutb01 AS u ON e.VcEstTb03_IdEstudiante = u.VcUsuTb01_Cedula 
  JOIN especialidadtb16 AS s ON e.InEspecialidadTb16_IdEspecialidad = s.InEspecialidadTb16_IdEspecialidad
  WHERE e.VcEstTb03_IdEstudiante LIKE CONCAT('%',dato,'%') 
  OR u.VcUsuTb01_Nombre LIKE CONCAT('%',dato,'%')
  OR u.VcUsuTb01_Ape1 LIKE CONCAT('%',dato,'%')
  OR  u.VcUsuTb01_Ape2 LIKE CONCAT('%',dato,'%')
  OR s.VcEspecialidadTb16_Nombre LIKE CONCAT('%',dato,'%')
  OR u.VcUsuTb01_Direccion LIKE CONCAT('%',dato,'%')
  OR u.VcUsuTb01_Telefono LIKE CONCAT('%',dato,'%')
  OR u.VcUsuTb01_Email LIKE CONCAT('%',dato,'%')
  OR  e.DtEstTb03_FechaNac LIKE CONCAT('%',dato,'%')
  OR e.VcEstTb03_Adecuacion LIKE CONCAT('%',dato,'%')
  OR e.VcEstTb03_Estado ;
END $

/* Borrar Estudiante*/
DROP PROCEDURE IF EXISTS PaEstTb03_BorrarEst;
DELIMITER $
CREATE PROCEDURE PaEstTb03_BorrarEst(IN IdEst VARCHAR(20))
BEGIN
UPDATE esttb03 SET VcEstTb03_Estado = 'I' WHERE VcEstTb03_IdEstudiante = IdEst;
END $

/* Matricular Estudiante*/
DROP PROCEDURE IF EXISTS PaEstTb03_Matricula;
DELIMITER $
CREATE PROCEDURE PaEstTb03_Matricula(in idEst varchar(20), IN mat int,in gra varchar(20), in sec int)
BEGIN
insert into graesttb26 (VcEstTb03_IdEstudiante, InGradoTb13_IdGrado)
values (idEst, gra);
insert into secesttb28 (VcEstTb03_IdEstudiante,InSeccionTb20_IdSeccion)
values (idEst, sec);
insert into inscmateriatb11 (VcEstTb03_IdEstudiante,InMateriaTb17_IdMateria)
values (idEst, mat); 
END $

/* Ver Matricula Estudiante*/
DROP PROCEDURE IF EXISTS PaEstTb03_MatriculaVer;
DELIMITER $
CREATE PROCEDURE PaEstTb03_MatriculaVer(in idEst varchar(20))
BEGIN
declare est varchar(20);
set est = '102580760';
	 select concat(gradotb13.VcGradoTb13_NombreGrado,'-', secciontb20.InSeccionTb20_Num_Grupo) as 'Seccion', 
     MateriaTb17.VcMateriaTb17_Nombre as 'Materia'
     from MateriaTb17, esttb03 inner join graesttb26 on esttb03.VcEstTb03_IdEstudiante = graesttb26.VcEstTb03_IdEstudiante
     join secesttb28 on esttb03.VcEstTb03_IdEstudiante = secesttb28.VcEstTb03_IdEstudiante
     join inscmateriatb11 on esttb03.VcEstTb03_IdEstudiante = inscmateriatb11.VcEstTb03_IdEstudiante,
     secciontb20 inner join secgradotb25 on secgradotb25.InSeccionTb20_IdSeccion = secciontb20.InSeccionTb20_IdSeccion 
join gradotb13 on secgradotb25.InGradoTb13_IdGrado = gradotb13.InGradoTb13_IdGrado
     where  esttb03.VcEstTb03_IdEstudiante = idEst;
END $

/**************************************************************************************************************************************************************/

-- -----------------------------------------------------
-- PROFESOR
-- -----------------------------------------------------

	/* ProfTb04 */
/* Guardar Profesor */
DROP PROCEDURE IF EXISTS PaProfTb04_GuardarProf;
DELIMITER $
CREATE PROCEDURE PaProfTb04_GuardarProf(IN IdProf VARCHAR(20),  IN FecNacProf DATE, IN Clave VARCHAR(20), IN Estado VARCHAR(20),
IN NomProf VARCHAR(20), IN Ape1 VARCHAR(20), IN Ape2 VARCHAR(20), IN Direccion VARCHAR(100), 
IN Sexo CHAR(1), IN Telefono VARCHAR(8), IN Email VARCHAR(100))
BEGIN
	INSERT INTO UsuTb01(VcUsuTb01_Cedula, VcUsuTb01_Nombre, VcUsuTb01_Ape1, VcUsuTb01_Ape2, VcUsuTb01_Direccion, 
    CrUsuTb01_Sexo, VcUsuTb01_Telefono, VcUsuTb01_Email)
    VALUES(IdProf, NomProf, Ape1, Ape2, Direccion, Sexo, Telefono, Email);
     INSERT INTO ProfTb04 (VcProfTb04_IdProfesor, DtProfTb04_FechaNac, VcProfTb04_Clave, VcProfTb04_Estado)
    VALUES (IdProf, FecNacProf, Clave, Estado);
END $ 

/* Buscar Profesor */
DROP PROCEDURE IF EXISTS PaProfTb04_BuscarProf;
DELIMITER $
CREATE PROCEDURE PaProfTb04_BuscarProf(IN cedula VARCHAR(20))
BEGIN
	SELECT u.VcUsuTb01_Cedula AS 'Cedula', u.VcUsuTb01_Nombre AS 'Nombre', u.VcUsuTb01_Ape1 AS 'Apellido1',
    u.VcUsuTb01_Ape2 AS 'Apellido2', u.VcUsuTb01_Direccion AS 'Direccion', u.CrUsuTb01_Sexo AS 'Sexo',
    u.VcUsuTb01_Telefono AS 'Telefono', u.VcUsuTb01_Email AS 'Correo_Electronico',
    p.VcProfTb04_IdProfesor AS 'Id_Profesor', p.DtProfTb04_FechaNac AS 'Fecha_Nac',
    p.VcProfTb04_Clave AS 'Clave', p.VcProfTb04_Estado AS 'Estado'
    FROM ProfTb04 AS p INNER JOIN usutb01 AS u ON p.VcProfTb04_IdProfesor = u.VcUsuTb01_Cedula
  WHERE p.VcProfTb04_IdProfesor = cedula;
END $

/* Buscar dinámica Prof */
DROP PROCEDURE IF EXISTS PaProfTb04_BuscarProfD;
DELIMITER $
CREATE PROCEDURE PaProfTb04_BuscarProfD(IN dato VARCHAR(20))
BEGIN
	SELECT u.VcUsuTb01_Cedula AS 'Cedula', u.VcUsuTb01_Nombre AS 'Nombre', u.VcUsuTb01_Ape1 AS 'Apellido1',
    u.VcUsuTb01_Ape2 AS 'Apellido2', u.VcUsuTb01_Direccion AS 'Direccion', u.CrUsuTb01_Sexo AS 'Sexo',
    u.VcUsuTb01_Telefono AS 'Telefono', u.VcUsuTb01_Email AS 'Correo_Electronico',
    p.VcProfTb04_IdProfesor AS 'Id_Profesor', p.DtProfTb04_FechaNac AS 'Fecha_Nac',
    p.VcProfTb04_Clave AS 'Clave', p.VcProfTb04_Estado AS 'Estado'
    FROM ProfTb04 AS p INNER JOIN usutb01 AS u ON p.VcProfTb04_IdProfesor = u.VcUsuTb01_Cedula
  WHERE p.VcProfTb04_IdProfesor LIKE CONCAT('%',dato,'%') 
  OR u.VcUsuTb01_Nombre LIKE CONCAT('%',dato,'%')
  OR u.VcUsuTb01_Ape1 LIKE CONCAT('%',dato,'%')
  OR  u.VcUsuTb01_Ape2 LIKE CONCAT('%',dato,'%')
  OR u.VcUsuTb01_Direccion LIKE CONCAT('%',dato,'%')
  OR u.CrUsuTb01_Sexo LIKE CONCAT('%',dato,'%')
  OR u.VcUsuTb01_Email LIKE CONCAT('%',dato,'%');
END $

/* Actualizar Profesor */
DROP PROCEDURE IF EXISTS PaProfTb04_ActualizarProf;
DELIMITER $
CREATE PROCEDURE PaProfTb04_ActualizarProf(IN IdProf VARCHAR(20),  IN FecNac DATE, IN Clave VARCHAR(20),IN Nom VARCHAR(20), 
IN Ape1 VARCHAR(20), IN Ape2 VARCHAR(20), IN Direccion VARCHAR(100), IN Telefono VARCHAR(8), IN Email VARCHAR(100))
BEGIN
	UPDATE usutb01, ProfTb04
    SET usutb01.VcUsuTb01_Nombre = Nom,
    usutb01.VcUsuTb01_Ape1 = Ape1,usutb01.VcUsuTb01_Ape2 = Ape2,usutb01.VcUsuTb01_Direccion = Direccion,
    usutb01.VcUsuTb01_Telefono = Telefono,usutb01.VcUsuTb01_Email = Email,
    ProfTb04.VcProfTb04_IdProfesor = IdProf, ProfTb04.VcProfTb04_Clave = Clave,
    ProfTb04.DtProfTb04_FechaNac = FecNac
    WHERE ProfTb04.VcProfTb04_IdProfesor = IdProf AND usutb01.VcUsuTb01_Cedula = IdProf;
END $;

/* Listar Profesor */
DROP PROCEDURE IF EXISTS PaProfTb04_Listar;
DELIMITER $
CREATE PROCEDURE PaProfTb04_Listar (IN `inicio` INT, IN `final` INT)
BEGIN
SELECT UsuTb01.VcUsuTb01_Cedula AS 'Cedula', UsuTb01.VcUsuTb01_Nombre  AS 'Nombre', UsuTb01.VcUsuTb01_Ape1  AS 'Apellido1',
 UsuTb01.VcUsuTb01_Ape2  AS 'Apellido2', UsuTb01.VcUsuTb01_Direccion AS 'Direccion', UsuTb01.CrUsuTb01_Sexo AS 'Genero', 
 UsuTb01.VcUsuTb01_Telefono AS 'Telefono', UsuTb01.VcUsuTb01_Email AS 'Email',ProfTb04.VcProfTb04_Clave AS 'Clave', 
 ProfTb04.DtProfTb04_FechaNac AS 'Fecha_Nac', ProfTb04.VcProfTb04_Estado AS 'Estado'
    FROM UsuTb01, ProfTb04
    WHERE ProfTb04.VcProfTb04_IdProfesor = UsuTb01.VcUsuTb01_Cedula AND proftb04.VcProfTb04_Estado = 'A'
	ORDER BY 'date added' LIMIT inicio,final;
END $

/* Listar Profesor */
DROP PROCEDURE IF EXISTS PaProfTb04_ListarA;
DELIMITER $
CREATE PROCEDURE PaProfTb04_ListarA()
BEGIN
SELECT UsuTb01.VcUsuTb01_Cedula AS 'Cedula', UsuTb01.VcUsuTb01_Nombre  AS 'Nombre', UsuTb01.VcUsuTb01_Ape1  AS 'Apellido1',
 UsuTb01.VcUsuTb01_Ape2  AS 'Apellido2', UsuTb01.VcUsuTb01_Direccion AS 'Direccion', UsuTb01.CrUsuTb01_Sexo AS 'Genero', 
 UsuTb01.VcUsuTb01_Telefono AS 'Telefono', UsuTb01.VcUsuTb01_Email AS 'Email',ProfTb04.VcProfTb04_Clave AS 'Clave', 
 ProfTb04.DtProfTb04_FechaNac AS 'Fecha_Nac', ProfTb04.VcProfTb04_Estado AS 'Estado'
    FROM UsuTb01, ProfTb04
    WHERE ProfTb04.VcProfTb04_IdProfesor = UsuTb01.VcUsuTb01_Cedula AND proftb04.VcProfTb04_Estado = 'A'
	ORDER BY VcProfTb04_IdProfesor;
END $

/* Borrar Profesor*/
DROP PROCEDURE IF EXISTS PaProfTb04_BorrarProf;
DELIMITER $
CREATE PROCEDURE PaProfTb04_BorrarProf(IN IdProf VARCHAR(20))
BEGIN
UPDATE proftb04 SET VcProfTb04_Estado = 'I' WHERE VcProfTb04_IdProfesor = IdProf;
END $

/* Asignar Seccion Profesor*/
DROP PROCEDURE IF EXISTS PaProfTb04_Asigna_SecProf;
DELIMITER $
CREATE PROCEDURE PaProfTb04_Asigna_SecProf(IN IdProf VARCHAR(20), in IdSec int)
BEGIN
insert into seccionproftb27(VcProfTb04_IdProfesor,InSeccionTb20_IdSeccion) 
    values(IdProf, IdSec);
END $

/* Listar Seccion prof*/
DROP PROCEDURE IF EXISTS PaSeccionTb20_Lista_SecProf;
DELIMITER $
CREATE PROCEDURE PaSeccionTb20_Lista_SecProf(IN IdProf VARCHAR(20), in IdSec int)
BEGIN
select secciontb20.InSeccionTb20_IdSeccion as 'ID_Seccion',gradotb13.VcGradoTb13_NombreGrado as 'Grado',
secciontb20.InSeccionTb20_Num_Grupo as 'Num_grupo'
from secciontb20 inner join secgradotb25 on secgradotb25.InSeccionTb20_IdSeccion = secciontb20.InSeccionTb20_IdSeccion 
join gradotb13 on secgradotb25.InGradoTb13_IdGrado = gradotb13.InGradoTb13_IdGrado 
order by 'date added';
END $

/* Listar Seccion*/
DROP PROCEDURE IF EXISTS PaSeccionTb20_Lista_Sec;
DELIMITER $
CREATE PROCEDURE PaSeccionTb20_Lista_SecMat()
BEGIN
select secciontb20.InSeccionTb20_IdSeccion as 'ID_Seccion',
concat(gradotb13.VcGradoTb13_NombreGrado,'-', secciontb20.InSeccionTb20_Num_Grupo) as 'Seccion'
from secciontb20 inner join secgradotb25 on secgradotb25.InSeccionTb20_IdSeccion = secciontb20.InSeccionTb20_IdSeccion 
join gradotb13 on secgradotb25.InGradoTb13_IdGrado = gradotb13.InGradoTb13_IdGrado;
END $

/* Listar Seccion*/
DROP PROCEDURE IF EXISTS PaSeccionTb20_Lista_Sec;
DELIMITER $
CREATE PROCEDURE PaSeccionTb20_Carga_Sec()
BEGIN
select secciontb20.InSeccionTb20_IdSeccion as 'ID_Seccion',
concat(gradotb13.VcGradoTb13_NombreGrado,'-', secciontb20.InSeccionTb20_Num_Grupo) as 'Seccion'
from secciontb20 inner join secgradotb25 on secgradotb25.InSeccionTb20_IdSeccion = secciontb20.InSeccionTb20_IdSeccion 
join gradotb13 on secgradotb25.InGradoTb13_IdGrado = gradotb13.InGradoTb13_IdGrado;
END $

/**************************************************************************************************************************************************************/

-- -----------------------------------------------------
-- ENCARGADO
-- -----------------------------------------------------

		/* EncTb05 */
/* Guardar Encargado */
DROP PROCEDURE IF EXISTS PaEncTb05_GuardarEnc;
DELIMITER $
CREATE PROCEDURE PaEncTb05_GuardarEnc(IN IdEnc VARCHAR(20),IN NomEnc VARCHAR(20), IN Ape1 VARCHAR(20), IN Ape2 VARCHAR(20), 
IN Direccion VARCHAR(100), IN Sexo CHAR(1), IN Telefono VARCHAR(8), IN Email VARCHAR(100), IN Clave VARCHAR(20))
BEGIN
	INSERT INTO UsuTb01(VcUsuTb01_Cedula, VcUsuTb01_Nombre, VcUsuTb01_Ape1, VcUsuTb01_Ape2, VcUsuTb01_Direccion, CrUsuTb01_Sexo, VcUsuTb01_Telefono, VcUsuTb01_Email)
    VALUES(IdEnc, NomEnc, Ape1, Ape2, Direccion, Sexo, Telefono, Email);
	INSERT INTO EncTb05(VcEncTb05_IdEncargado, VcEncTb05_Clave)
    VALUES (IdEnc, Clave);
END $

/* Actualizar Encargado */
DROP PROCEDURE IF EXISTS PaEncTb05_ActualizarEnc;
DELIMITER $
CREATE PROCEDURE PaEncTb05_ActualizarEnc( IN IdEnc VARCHAR(20),IN NomEnc VARCHAR(20), IN Ape1 VARCHAR(20), 
IN Ape2 VARCHAR(20), IN Direccion VARCHAR(100), IN Telefono VARCHAR(8), IN Email VARCHAR(100))
BEGIN
	UPDATE enctb05,usutb01
    SET usutb01.VcUsuTb01_Nombre = NomEnc, usutb01.VcUsuTb01_Ape1 = Ape1, usutb01.VcusuTb01_Ape2 = Ape2,
    usutb01.VcUsutb01_Direccion = Direccion, usutb01.VcUsuTb01_Telefono = Telefono,
	usutb01.VcUsuTb01_Email = Email
    WHERE enctb05.VcEncTb05_IdEncargado = IdEnc  AND usutb01.VcUsuTb01_Cedula=IdEnc;
END $

/* Buscar Encargado */
DROP PROCEDURE IF EXISTS PaEncTb05_BuscarEnc;
DELIMITER $
CREATE PROCEDURE PaEncTb05_BuscarEnc(IN cedula VARCHAR(20))
BEGIN
	SELECT u.VcUsuTb01_Cedula AS 'Cedula', u.VcUsuTb01_Nombre AS 'Nombre', u.VcUsuTb01_Ape1 AS 'Apellido1',
    u.VcUsuTb01_Ape2 AS 'Apellido2', u.VcUsuTb01_Direccion AS 'Direccion', u.CrUsuTb01_Sexo AS 'Genero',
    u.VcUsuTb01_Telefono AS 'Telefono', u.VcUsuTb01_Email AS 'Email', e.VcEncTb05_Clave AS 'Clave'
    FROM EncTb05 AS e INNER JOIN usutb01 AS u ON e.VcEncTb05_IdEncargado = u.VcUsuTb01_Cedula
  WHERE e.VcEncTb05_IdEncargado = cedula;
END $

/* Buscar Dinámico Encargado */
DROP PROCEDURE IF EXISTS PaEncTb05_BuscarEncD;
DELIMITER $
CREATE PROCEDURE PaEncTb05_BuscarEncD(IN dato VARCHAR(20))
BEGIN
	SELECT u.VcUsuTb01_Cedula AS 'Cedula', u.VcUsuTb01_Nombre AS 'Nombre', u.VcUsuTb01_Ape1 AS 'Apellido1',
    u.VcUsuTb01_Ape2 AS 'Apellido2', u.VcUsuTb01_Direccion AS 'Direccion', u.CrUsuTb01_Sexo AS 'Genero',
    u.VcUsuTb01_Telefono AS 'Telefono', u.VcUsuTb01_Email AS 'Email', e.VcEncTb05_Clave AS 'Clave'
    FROM EncTb05 AS e INNER JOIN usutb01 AS u ON e.VcEncTb05_IdEncargado = u.VcUsuTb01_Cedula
  WHERE e.VcEncTb05_IdEncargado LIKE CONCAT('%',dato,'%') 
  OR u.VcUsuTb01_Nombre LIKE CONCAT('%',dato,'%') 
  OR u.VcUsuTb01_Ape1 LIKE CONCAT('%',dato,'%')
  OR u.VcUsuTb01_Ape2 LIKE CONCAT('%',dato,'%') 
  OR u.VcUsuTb01_Direccion LIKE CONCAT('%',dato,'%') 
  OR u.CrUsuTb01_Sexo LIKE CONCAT(dato,'%')
  OR u.VcUsuTb01_Email LIKE CONCAT('%',dato,'%') ;
END $

/* Listar Encargado */
DROP PROCEDURE IF EXISTS PaEncTb05_Listar;
DELIMITER $
CREATE PROCEDURE PaEncTb05_Listar(IN `inicio` INT, IN `fin` INT)
BEGIN
 SELECT UsuTb01.VcUsuTb01_Cedula AS 'Cedula', UsuTb01.VcUsuTb01_Nombre  AS 'Nombre', UsuTb01.VcUsuTb01_Ape1  AS 'Apellido1',
 UsuTb01.VcUsuTb01_Ape2  AS 'Apellido2', UsuTb01.VcUsuTb01_Direccion AS 'Direccion', UsuTb01.CrUsuTb01_Sexo AS 'Genero', 
 UsuTb01.VcUsuTb01_Telefono AS 'Telefono', UsuTb01.VcUsuTb01_Email AS 'Email', 
 enctb05.Vcenctb05_IdEncargado AS 'Id Encargado', enctb05.Vcenctb05_Clave AS 'Clave'
    FROM UsuTb01, enctb05
    WHERE enctb05.VcEncTb05_IdEncargado = UsuTb01.VcUsuTb01_Cedula
	ORDER BY 'date added' LIMIT inicio,fin;
END $

/* Listar Encargado */
DROP PROCEDURE IF EXISTS PaEncTb05_ListarA;
DELIMITER $
CREATE PROCEDURE PaEncTb05_ListarA()
BEGIN
 SELECT UsuTb01.VcUsuTb01_Cedula AS 'Cedula', UsuTb01.VcUsuTb01_Nombre  AS 'Nombre', UsuTb01.VcUsuTb01_Ape1  AS 'Apellido1',
 UsuTb01.VcUsuTb01_Ape2  AS 'Apellido2', UsuTb01.VcUsuTb01_Direccion AS 'Direccion', UsuTb01.CrUsuTb01_Sexo AS 'Genero', 
 UsuTb01.VcUsuTb01_Telefono AS 'Telefono', UsuTb01.VcUsuTb01_Email AS 'Email', 
 enctb05.Vcenctb05_IdEncargado AS 'Id Encargado', enctb05.Vcenctb05_Clave AS 'Clave'
    FROM UsuTb01, enctb05
    WHERE enctb05.VcEncTb05_IdEncargado = UsuTb01.VcUsuTb01_Cedula
	ORDER BY VcEncTb05_IdEncargado;
END $

/* Listar Encargado */
DROP PROCEDURE IF EXISTS PaEncTb05_ListarAsigna;
DELIMITER $
CREATE PROCEDURE PaEncTb05_ListarAsigna()
BEGIN
 SELECT UsuTb01.VcUsuTb01_Cedula AS 'Cedula', UsuTb01.VcUsuTb01_Nombre  AS 'Nombre', 
 UsuTb01.VcUsuTb01_Ape1  AS 'Apellido1', UsuTb01.VcUsuTb01_Ape2  AS 'Apellido2' 
    FROM UsuTb01 INNER JOIN esttb03 ON usutb01.VcUsuTb01_Cedula = esttb03.VcEstTb03_IdEstudiante
	ORDER BY 'date added';
END $

/* Eliminar Encargado */
DROP PROCEDURE IF EXISTS PaEncTb05_EliminarEnc;
DELIMITER $
CREATE PROCEDURE PaEncTb05_EliminarEnc(IN id VARCHAR(20))
BEGIN
	DELETE FROM enctb05 WHERE VcEncTb05_IdEncargado = id;
END $

/**************************************************************************************************************************************************************/

-- -----------------------------------------------------
-- FUNCIONARIO
-- -----------------------------------------------------

		/* FunTb06 */
/* Guardar Funcionario */
DROP PROCEDURE IF EXISTS PaFunTb06_GuardarFunc;
DELIMITER $
CREATE PROCEDURE PaFunTb06_GuardarFunc(IN IdFun VARCHAR(20), IN Clave VARCHAR(20), IN FechaNac DATE, 
IN Estado VARCHAR(20), IN NomFun VARCHAR(20), IN Ape1 VARCHAR(20), IN Ape2 VARCHAR(20), IN Direccion VARCHAR(20),
IN Sexo CHAR(1), IN Telefono VARCHAR(8), IN Email VARCHAR(20))  
BEGIN
	INSERT INTO UsuTb01(VcUsuTb01_Cedula, VcUsuTb01_Nombre, VcUsuTb01_Ape1, VcUsuTb01_Ape2, VcUsuTb01_Direccion, 
    CrUsuTb01_Sexo, VcUsuTb01_Telefono, VcUsuTb01_Email)
    VALUES(IdFun, NomFun, Ape1, Ape2, Direccion, Sexo, Telefono, Email);
    INSERT INTO FunTb06 (VcFunTb06_IdFuncionario,VcFunTb06_Clave, DtFunTb06_FechaNac, VcFunTb06_Estado)
    VALUES (IdFun, Clave, FechaNac, Estado);
END $

/* Actualizar Funcionario */
DROP PROCEDURE IF EXISTS PaFunTb06_ActualizarFunc;
DELIMITER $
CREATE PROCEDURE PaFunTb06_ActualizarFunc(IN IdFun VARCHAR(20), IN FechaNac DATE, IN Clave VARCHAR(20),IN NomFun VARCHAR(20),
IN Ape1 VARCHAR(20), IN Ape2 VARCHAR(20), IN Direccion VARCHAR(100), IN Telefono VARCHAR(8), IN Email VARCHAR(100))
BEGIN
	UPDATE FunTb06,usutb01
    SET funtb06.VcFunTb06_Clave = Clave, funtb06.DtFunTb06_FechaNac = FechaNac, 
	usutb01.VcUsuTb01_Nombre = NomFun, usutb01.VcUsuTb01_Ape1 = Ape1, usutb01.VcusuTb01_Ape2 = Ape2,
	usutb01.VcUsutb01_Direccion = Direccion, usutb01.VcUsuTb01_Telefono = Telefono, usutb01.VcUsuTb01_Email = Email
	WHERE funtb06.VcFunTb06_IdFuncionario = IdFun AND usutb01.VcUsuTb01_Cedula = IdFun;
END $

/* Listar Funcionario */
DROP PROCEDURE IF EXISTS PaFunTb06_Listar;
DELIMITER $
CREATE PROCEDURE PaFunTb06_Listar(IN `inicio` INT, IN `final` INT)
BEGIN
SELECT UsuTb01.VcUsuTb01_Cedula AS 'Cedula', UsuTb01.VcUsuTb01_Nombre  AS 'Nombre', UsuTb01.VcUsuTb01_Ape1  AS 'Apellido1',
 UsuTb01.VcUsuTb01_Ape2  AS 'Apellido2', UsuTb01.VcUsuTb01_Direccion AS 'Direccion', UsuTb01.CrUsuTb01_Sexo AS 'Genero', 
 UsuTb01.VcUsuTb01_Telefono AS 'Telefono', UsuTb01.VcUsuTb01_Email AS 'Email', funtb06.VcFunTb06_Clave AS 'Clave', 
 funtb06.DtFunTb06_FechaNac AS 'Fecha_Nac', funtb06.VcFunTb06_Estado AS 'Estado'
    FROM UsuTb01, funtb06
    WHERE funtb06.VcFunTb06_IdFuncionario = usutb01.VcUsuTb01_Cedula
	ORDER BY 'date added' LIMIT inicio,final;
END $
	
/* Buscar Funcionario */
DROP PROCEDURE IF EXISTS PaFunTb06BuscarFunc;
DELIMITER $
CREATE PROCEDURE PaFunTb06_BuscarFunc (IN cedula VARCHAR(20))
BEGIN
SELECT usutb01.VcUsuTb01_Cedula AS 'Cedula',usutb01.VcUsuTb01_Nombre AS 'Nombre',usutb01.VcUsuTb01_Ape1 AS 'Apellido1',
usutb01.VcUsuTb01_Ape2 AS 'Apellido2',usutb01.VcUsuTb01_Direccion AS 'Direccion',usutb01.CrUsuTb01_Sexo AS 'Sexo',
usutb01.VcUsuTb01_Telefono AS 'Telefono',usutb01.VcUsuTb01_Email AS 'Email',funtb06.VcFunTb06_Clave AS 'Clave',
funtb06.DtFunTb06_FechaNac AS 'Fecha_Nac',funtb06.VcFunTb06_Estado AS 'Estado' 
FROM usutb01 INNER JOIN funtb06 ON usutb01.VcUsuTb01_Cedula = funtb06.VcFunTb06_IdFuncionario 
WHERE funtb06.VcFunTb06_IdFuncionario = cedula;
END $

/* Buscar Dinamico Funcionario */
DROP PROCEDURE IF EXISTS PaFunTb06BuscarFuncD;
DELIMITER $
CREATE PROCEDURE PaFunTb06_BuscarFuncD(IN dato VARCHAR(20))
BEGIN
SELECT usutb01.VcUsuTb01_Cedula AS 'Cedula',usutb01.VcUsuTb01_Nombre AS 'Nombre',usutb01.VcUsuTb01_Ape1 AS 'Apellido1',
usutb01.VcUsuTb01_Ape2 AS 'Apellido2',usutb01.VcUsuTb01_Direccion AS 'Direccion',usutb01.CrUsuTb01_Sexo AS 'Sexo',
usutb01.VcUsuTb01_Telefono AS 'Telefono',usutb01.VcUsuTb01_Email AS 'Email',funtb06.VcFunTb06_Clave AS 'Clave',
funtb06.DtFunTb06_FechaNac AS 'Fecha_Nac',funtb06.VcFunTb06_Estado AS 'Estado' 
FROM usutb01 INNER JOIN funtb06 ON usutb01.VcUsuTb01_Cedula = funtb06.VcFunTb06_IdFuncionario 
WHERE funtb06.VcFunTb06_IdFuncionario LIKE CONCAT('%',dato,'%')
OR usutb01.VcUsuTb01_Nombre LIKE CONCAT('%',dato,'%')
OR usutb01.VcUsuTb01_Ape1 LIKE CONCAT('%',dato,'%')
OR usutb01.VcUsuTb01_Ape2 LIKE CONCAT('%',dato,'%')
OR usutb01.VcUsuTb01_Direccion LIKE CONCAT('%',dato,'%')
OR usutb01.CrUsuTb01_Sexo LIKE CONCAT('%',dato,'%')
OR usutb01.VcUsuTb01_Email LIKE CONCAT('%',dato,'%');
END $

/* Borrar funcionario*/
DROP PROCEDURE IF EXISTS PaFunTb06_BorrarFunc;
DELIMITER $
CREATE PROCEDURE PaFunTb06_BorrarFunc(IN cedula VARCHAR(20))
BEGIN
UPDATE funtb06
SET VcFunTb06_Estado = 'I' WHERE VcFunTb06_IdFuncionario = cedula;
END $

/**************************************************************************************************************************************************************/

-- -----------------------------------------------------
-- ESTUDIANTE-ENCARGADO
-- -----------------------------------------------------

		/* EstEncTb07 */
/* Guardar Estudiante encargado */
DROP PROCEDURE  IF EXISTS PaEstEncTb07_GuardarEstEnc;
DELIMITER $
CREATE PROCEDURE PaEstEncTb07_GuardarEstEnc(IN IdEncargado VARCHAR(20), IN IdEstudiante VARCHAR(20))
BEGIN
	INSERT INTO estenctb07(VcEstTb03_IdEstudiante,VcEncTb05_IdEncargado)
    SELECT e.VcEstTb03_IdEstudiante, o.VcEncTb05_IdEncargado
    FROM esttb03 AS e,enctb05 AS o
    WHERE e.VcEstTb03_IdEstudiante = IdEstudiante AND o.VcEncTb05_IdEncargado = IdEncargado; 
END $

/* Actualizar Estudiante encargado */
DROP PROCEDURE  IF EXISTS PaEstEncTb07_ActualizarEstEnc;
DELIMITER $
CREATE PROCEDURE PaEstEncTb07_ActualizarEstEnc(IN IdEnc VARCHAR(20), IN IdEst VARCHAR(20))
BEGIN
	UPDATE EstEncTb07
    SET VcEstEncTb07_IdEncargado = IdEnc, VcEstEncTb07_IdEstudiante = IdEst
    WHERE VcEstEncTb07_IdEncargado = IdEnc;
END $

/* Buscar Estudiante encargado */
DROP PROCEDURE  IF EXISTS PaEstEncTb07_BuscarEstEnc_Est;
DELIMITER $
CREATE PROCEDURE PaEstEncTb07_BuscarEstEnc_Est(IN IdEst VARCHAR(20))
BEGIN
	SELECT u.VcUsuTb01_Cedula AS 'Cedula',u.VcUsuTb01_Nombre AS 'Nombre',u.VcUsuTb01_Ape1 AS '1° Apellido',
    u.VcUsuTb01_Ape2 AS '2° Apellido',u.VcUsuTb01_Direccion AS 'Direccion',u.CrUsuTb01_Sexo AS 'Sexo',
    u.VcUsuTb01_Telefono AS 'Telefono',u.VcUsuTb01_Email AS 'Correo electronico'
    FROM usutb01 AS u INNER JOIN enctb05 AS e ON u.VcUsuTb01_Cedula = e.VcEncTb05_IdEncargado
    INNER JOIN estenctb07 AS l ON e.VcEncTb05_IdEncargado = l.VcEncTb05_IdEncargado
     WHERE l.VcEstTb03_IdEstudiante = IdEst;
END $

/* Buscar Encargado estudiante */
DROP PROCEDURE  IF EXISTS PaEstEncTb07_BuscarEstEnc_Enc;
DELIMITER $
CREATE PROCEDURE PaEstEncTb07_BuscarEstEnc_Enc(IN IdEnc VARCHAR(20))
BEGIN
	SELECT u.VcUsuTb01_Cedula AS 'Cedula',u.VcUsuTb01_Nombre AS 'Nombre',u.VcUsuTb01_Ape1 AS '1° Apellido',
    u.VcUsuTb01_Ape2 AS '2° Apellido',u.VcUsuTb01_Direccion AS 'Direccion',u.CrUsuTb01_Sexo AS 'Sexo',
    u.VcUsuTb01_Telefono AS 'Telefono',u.VcUsuTb01_Email AS 'Correo electronico', e.DtEstTb03_FechaNac AS 'Fecha de nacimiento',
    e.VcEstTb03_Adecuacion AS 'Adecuacion',e.VcEstTb03_Estado AS 'Estado'
    FROM usutb01 AS u INNER JOIN esttb03 AS e ON u.VcUsuTb01_Cedula = e.VcEstTb03_IdEstudiante
    JOIN estenctb07 AS p ON e.VcEstTb03_IdEstudiante = p.VcEstTb03_IdEstudiante
    WHERE p.VcEncTb05_IdEncargado = IdEnc;
END $

/* Asignar Estudiante a Encargado */
DROP PROCEDURE  IF EXISTS PaEstEncTb07_AsignarEstEnc;
DELIMITER $
CREATE PROCEDURE PaEstEncTb07_AsignarEstEn(IN IdEnc VARCHAR(20),IN IdEst VARCHAR(20))
BEGIN
	INSERT INTO estenctb07(VcEncTb05_IdEncargado,VcEstTb03_IdEstudiante)
    VALUES(IdEnc,IdEst);
END $

/* Listar info Estudiante Encargado */
DROP PROCEDURE  IF EXISTS PaEstEncTb07_ListarEstEn;
DELIMITER $  
CREATE PROCEDURE PaEstEncTb07_ListarEstEn(IN IdEst VARCHAR(20))
BEGIN
  SELECT UsuTb01.VcUsuTb01_Cedula AS 'Cedula',
  concat(usutb01.VcUsuTb01_Nombre , ' ' , 
    usutb01.VcUsuTb01_Ape1, ' ' , usutb01.VcUsuTb01_Ape2) as 'Nombre Completo',
 UsuTb01.VcUsuTb01_Direccion AS 'Direccion', UsuTb01.CrUsuTb01_Sexo AS 'Genero', UsuTb01.VcUsuTb01_Telefono AS 'Telefono', 
 UsuTb01.VcUsuTb01_Email AS 'Email', EstTb03.DtEstTb03_FechaNac AS 'FechaNac',EstTb03.VcEstTb03_Adecuacion AS 'Adecuacion', EstTb03.VcEstTb03_Estado AS 'Estado'
 FROM usutb01 INNER JOIN estenctb07 ON  usutb01.VcUsuTb01_Cedula = estenctb07.VcEstTb03_IdEstudiante
 JOIN esttb03 ON EstTb03.VcEstTb03_IdEstudiante = usutb01.VcUsuTb01_Cedula
    WHERE estenctb07.VcEstTb03_IdEstudiante = IdEst;
END $ 

/* Cargar Estudiante Encargado */
DROP PROCEDURE  IF EXISTS PaEstEncTb07_CargarEst;
DELIMITER $
CREATE PROCEDURE PaEstEncTb07_CargarEst(IN IdEnc VARCHAR(20))
BEGIN
	SELECT e.VcEstTb03_IdEstudiante AS 'Cedula'
    FROM esttb03 AS e INNER JOIN estenctb07 AS p ON e.VcEstTb03_IdEstudiante = p.VcEstTb03_IdEstudiante
    WHERE p.VcEncTb05_IdEncargado = IdEnc;
END $

/* Info Estudiante */
DROP PROCEDURE  IF EXISTS PaEstTb03_Info;
DELIMITER $
CREATE PROCEDURE PaEstTb03_Info(IN IdEst VARCHAR(20))
BEGIN
	select esttb03.VcEstTb03_IdEstudiante as 'Cedula', 
    concat(usutb01.VcUsuTb01_Nombre , ' ' , usutb01.VcUsuTb01_Ape1, ' ' , usutb01.VcUsuTb01_Ape2) as 'Nombre_Est',
    usutb01.VcUsuTb01_Direccion as 'Direccion',usutb01.CrUsuTb01_Sexo as 'Genero',
    usutb01.VcUsuTb01_Telefono AS 'Telefono',
    usutb01.VcUsuTb01_Email AS 'Email', 
    esttb03.DtEstTb03_FechaNac AS 'Nacimiento',
    esttb03.VcEstTb03_Adecuacion AS 'Adecuacion',
    esttb03.VcEstTb03_Estado AS 'Estado',
    enctb05.VcEncTb05_IdEncargado as 'Encargado'/*,
    concat(usutb01.VcUsuTb01_Nombre , ' ' , usutb01.VcUsuTb01_Ape1, ' ' , usutb01.VcUsuTb01_Ape2) as 'Nombre_Enc',
    usutb01.VcUsuTb01_Telefono AS 'Telefono_Enc',
    usutb01.VcUsuTb01_Email AS 'Email_Enc'*/
    FROM 
    usutb01 INNER JOIN EstTb03 ON usutb01.VcUsuTb01_Cedula = esttb03.VcEstTb03_IdEstudiante
    join estenctb07 ON esttb03.VcEstTb03_IdEstudiante = estenctb07.VcEstTb03_IdEstudiante
    join enctb05 on estenctb07.VcEncTb05_IdEncargado = enctb05.VcEncTb05_IdEncargado
    WHERE estenctb07.VcEstTb03_IdEstudiante = IdEst;
END $
/**************************************************************************************************************************************************************/

-- -----------------------------------------------------
-- ASISTENCIA DE COLE
-- -----------------------------------------------------

	/* AsistColeTb08*/
/* Guardar Asistencia colegio */
DROP PROCEDURE  IF EXISTS PaAsistColeTb08_GuardarAsistCole;
DELIMITER $
CREATE PROCEDURE PaAsistColeTb08_GuardarAsistCole(IN HoraEntrada TIME, IN FechaEntrada DATE,
IN HoraSalida TIME, IN FechaSalida DATE, IN IdEstudiante VARCHAR(20))
BEGIN
	INSERT INTO AsistColeTb08 (TmAsistColeTb08_HoraEntrada, DtAsistColeTb08_FechaEntrada,
    TmAsistColeTb08_HoraSalida, DtAsistColeTb08_FechaSalida, VcEstTb03_IdEstudiante)
    VALUES (HoraEntrada, FechaEntrada, HoraSalida, FechaSalida, IdEstudiante);
END $

/* Actualizar Asistencia colegio */
DROP PROCEDURE  IF EXISTS PaAsistColeTb08_ActualizarAsistCole;
DELIMITER $
CREATE PROCEDURE PaAsistColeTb08_ActualizarAsistCole(IN IdAsistCole INT, IN HoraEntrada TIME, IN FechaEntrada DATE,
IN HoraSalida TIME, IN FechaSalida DATE, IN IdEstudiante VARCHAR(20))
BEGIN
	UPDATE AsistColeTb08
    SET InAsistColeTb08_IdAsistCole = IdAsistCole, TmAsistColeTb08_HoraEntrada = HoraEntrada  , DtAsistColeTb08_FechaEntrada = FechaEntrada,
	TmAsistColeTb08_HoraSalida = HoraSalida, DtAsistColeTb08_FechaSalida = FechaSalida, VcEstTb03_IdEstudiante = IdEstudiante
	WHERE InAsistColeTb08_IdAsistCole = IdAsistCole;
END $

/* Buscar Asistencia colegio */
DROP PROCEDURE  IF EXISTS PaAsistColeTb08_BuscarAsistCole;
DELIMITER $
CREATE PROCEDURE PaAsistColeTb08_BuscarAsistCole(IN IdAsistCole INT)
BEGIN
	SELECT InAsistColeTb08_IdAsistCole, TmAsistColeTb08_HoraEntrada, DtAsistColeTb08_FechaEntrada,
    TmAsistColeTb08_HoraSalida, DtAsistColeTb08_FechaSalida, VcEstTb03_IdEstudiante
    FROM AsistColeTb08
     WHERE InAsistColeTb08_IdAsistCole = IdAsistCole;
END $

/* Buscar Dinámico Asistencia colegio */
DROP PROCEDURE  IF EXISTS PaAsistColeTb08_BuscarAsistColeD;
DELIMITER $
CREATE PROCEDURE PaAsistColeTb08_BuscarAsistColeD(IN dato INT)
BEGIN
	SELECT InAsistColeTb08_IdAsistCole, TmAsistColeTb08_HoraEntrada, DtAsistColeTb08_FechaEntrada,
    TmAsistColeTb08_HoraSalida, DtAsistColeTb08_FechaSalida, VcEstTb03_IdEstudiante
    FROM AsistColeTb08
     WHERE InAsistColeTb08_IdAsistCole LIKE CONCAT('%',dato,'%')
     OR TmAsistColeTb08_HoraEntrada LIKE CONCAT('%',dato,'%')
     OR DtAsistColeTb08_FechaEntrada LIKE CONCAT('%',dato,'%')
     OR TmAsistColeTb08_HoraSalida LIKE CONCAT('%',dato,'%')
     OR DtAsistColeTb08_FechaSalida LIKE CONCAT('%',dato,'%')
     OR VcEstTb03_IdEstudiante LIKE CONCAT('%',dato,'%');
END $

/* Listar Asistencia colegio */ 
DROP PROCEDURE  IF EXISTS PaAsistColeTb08_Listar;
DELIMITER $
CREATE PROCEDURE PaAsistColeTb08_Listar (IN `inicio` INT, IN `final` INT)
BEGIN
	SELECT InAsistColeTb08_IdAsistCole AS 'Id Asistencia', TmAsistColeTb08_HoraEntrada AS 'Hora Entrada', 
    DtAsistColeTb08_FechaEntrada AS 'Fecha Entrada', TmAsistColeTb08_HoraSalida AS 'Hora Salida', 
    DtAsistColeTb08_FechaSalida AS 'Fecha Salida', VcEstTb03_IdEstudiante AS 'Estudiante'
    FROM AsistColeTb08
	ORDER BY 'date added' LIMIT inicio,final;
END $

/* Eliminar Asistencia colegio */
DROP PROCEDURE  IF EXISTS PaAsistColeTb08_EliminarAsistCole;
DELIMITER $
CREATE PROCEDURE PaAsistColeTb08_EliminarAsistCole(IN IdAsisCole INT)
BEGIN
	DELETE FROM AsistColeTb08 WHERE InAsistColeTb08_IdAsistCole = IdAsisCole;
END $

/**************************************************************************************************************************************************************/

-- -----------------------------------------------------
-- GRADO
-- -----------------------------------------------------

 	/* GradoTb13 */
/* Guardar Grado */
DROP PROCEDURE IF EXISTS PaGradoTb13_GuardarGrado;
DELIMITER $
CREATE PROCEDURE PaGradoTb13_GuardarGrado(IN NombreGrado VARCHAR(20), IN IdBachiller INT)
BEGIN
	INSERT INTO GradoTb13(VcGradoTb13_NombreGrado, InBachillerTb14_IdBachiller)
    VALUES (NombreGrado, IdBachiller);
END $

/* Actualizar Grado */
DROP PROCEDURE IF EXISTS PaGradoTb13_ActualizarGrado;
DELIMITER $
CREATE PROCEDURE PaGradoTb13_ActualizarGrado(IN IdGrado INT, IN NombreGrado VARCHAR(20), IN IdBachiller INT)
BEGIN
	UPDATE GradoTb13
    SET   VcGradoTb13_NombreGrado = NombreGrado, InBachillerTb14_IdBachiller = IdBachiller 
    WHERE InGradoTb13_IdGrado = IdGrado;
END $

/* Eliminar Grado */
DROP PROCEDURE IF EXISTS PaGradoTb13_BorrarGrado;
DELIMITER $
CREATE PROCEDURE PaGradoTb13_BorrarGrado(IN id INT)
BEGIN
	DELETE FROM gradotb13 WHERE InGradoTb13_IdGrado = id;
END $

/* Buscar Grado */
DROP PROCEDURE IF EXISTS PaGradoTb13_BuscarGrado;
DELIMITER $
CREATE PROCEDURE PaGradoTb13_BuscarGrado(IN IdGrado INT)
BEGIN
	SELECT gradotb13.InGradoTb13_IdGrado AS 'id_grado' , gradotb13.VcGradoTb13_NombreGrado AS 'Nombre', 
    bachillertb14.InBachillerTb14_IdBachiller AS 'IdBachiller'
    FROM gradotb13 INNER JOIN bachillertb14 
    ON bachillertb14.InBachillerTb14_IdBachiller = gradotb13.InBachillerTb14_IdBachiller
     WHERE InGradoTb13_IdGrado = IdGrado;
END $

/* Buscar Grado */
DROP PROCEDURE IF EXISTS PaGradoTb13_BuscarGradoD;
DELIMITER $
CREATE PROCEDURE PaGradoTb13_BuscarGradoD(IN dato VARCHAR(20))
BEGIN
	SELECT gradotb13.InGradoTb13_IdGrado AS 'id_grado' , gradotb13.VcGradoTb13_NombreGrado AS 'Nombre', 
    bachillertb14.VcBachillerTb14_NombreBachiller AS 'Bachiller'
    FROM gradotb13 INNER JOIN bachillertb14 
    ON bachillertb14.InBachillerTb14_IdBachiller = gradotb13.InBachillerTb14_IdBachiller
     WHERE InGradoTb13_IdGrado LIKE CONCAT('%',dato,'%')
     OR VcGradoTb13_NombreGrado LIKE CONCAT('%',dato,'%')
     OR  bachillertb14.VcBachillerTb14_NombreBachiller LIKE CONCAT('%',dato,'%');
END $

/* Listar Grado */
DROP PROCEDURE IF EXISTS PaGradoTb13_Listar;
DELIMITER $
CREATE PROCEDURE PaGradoTb13_Listar(IN `inicio` INT, IN `final` INT)
BEGIN
	SELECT gradotb13.InGradoTb13_IdGrado AS 'id_grado' , gradotb13.VcGradoTb13_NombreGrado AS 'Nombre', 
    bachillertb14.VcBachillerTb14_NombreBachiller AS 'Bachiller'
    FROM gradotb13 INNER JOIN bachillertb14 ON bachillertb14.InBachillerTb14_IdBachiller = gradotb13.InBachillerTb14_IdBachiller
    ORDER BY 'date addeed' LIMIT inicio,final;
END $  

/* Listar Grado */
DROP PROCEDURE IF EXISTS PaGradoTb13_Listar_Todo;
DELIMITER $
CREATE PROCEDURE PaGradoTb13_Listar_Todo()
BEGIN
	SELECT gradotb13.InGradoTb13_IdGrado AS 'id_grado' , gradotb13.VcGradoTb13_NombreGrado AS 'Nombre', 
    bachillertb14.VcBachillerTb14_NombreBachiller AS 'Bachiller'
    FROM gradotb13 INNER JOIN bachillertb14 ON bachillertb14.InBachillerTb14_IdBachiller = gradotb13.InBachillerTb14_IdBachiller
    ORDER BY InGradoTb13_IdGrado;
END $  

/**************************************************************************************************************************************************************/

-- -----------------------------------------------------
-- BACHILLER
-- -----------------------------------------------------

	/* BachillerTb14 */
/* Guardar Bachiller */
DROP PROCEDURE IF EXISTS PaBachillerTb14_GuardarBachiller;
DELIMITER $
CREATE PROCEDURE PaBachillerTb14_GuardarBachiller(IN NomBac VARCHAR(20))
BEGIN
	INSERT INTO BachillerTb14 (VcBachillerTb14_NombreBachiller)
    VALUES (NomBac);
END $

/* Buscar Bachiller */
DROP PROCEDURE IF EXISTS PaBachillerTb14_BuscarBachiller;
DELIMITER $
CREATE PROCEDURE PaBachillerTb14_BuscarBachiller(IN IdBac INT)
BEGIN
	SELECT InBachillerTb14_IdBachiller AS 'Id', VcBachillerTb14_NombreBachiller AS 'Bachiller' 
    FROM BachillerTb14 
     WHERE InBachillerTb14_IdBachiller = IdBac;
END $

/* Buscar Dinamico Bachiller */
DROP PROCEDURE IF EXISTS PaBachillerTb14_BuscarBachillerD;
DELIMITER $
CREATE PROCEDURE PaBachillerTb14_BuscarBachillerD(IN dato VARCHAR(20))
BEGIN
	SELECT InBachillerTb14_IdBachiller AS 'Id', VcBachillerTb14_NombreBachiller AS 'Bachiller' 
    FROM BachillerTb14 
     WHERE InBachillerTb14_IdBachiller LIKE CONCAT('%',dato,'%')
     OR VcBachillerTb14_NombreBachiller LIKE CONCAT(dato,'%');
END $

/* Actualizar Bachiller */
DROP PROCEDURE IF EXISTS PaBachillerTb14_BuscarBachiller;
DELIMITER $
CREATE PROCEDURE PaBachillerTb14_ActualizarBachiller(IN IdBac INT, IN NomBac VARCHAR(20))
BEGIN
	UPDATE BachillerTb14
    SET   bachillertb14.VcBachillerTb14_NombreBachiller = NomBac
    WHERE   bachillertb14.InBachillerTb14_IdBachiller = IdBac;
END $

/* Listar Bachiller */
DROP PROCEDURE IF EXISTS PaBachillerTb14_Listar;
DELIMITER $
CREATE PROCEDURE PaBachillerTb14_Listar(IN `inicio` INT, IN `final` INT)
BEGIN
	SELECT InBachillerTb14_IdBachiller AS 'Id', VcBachillerTb14_NombreBachiller AS 'Bachiller' 
    FROM BachillerTb14
	ORDER BY 'date added' LIMIT inicio,final;
END $

/* Listar Bachiller sin Paginacion */
DROP PROCEDURE IF EXISTS PaBachillerTb14_Listar_Todos;
DELIMITER $
CREATE PROCEDURE PaBachillerTb14_Listar_Todos()
BEGIN
	SELECT InBachillerTb14_IdBachiller AS 'Id', VcBachillerTb14_NombreBachiller AS 'Bachiller' 
    FROM BachillerTb14;
END $

/* Eliminar Bachiller */
DROP PROCEDURE IF EXISTS PaBachillerTb14_EliminarBachiller;
DELIMITER $
CREATE PROCEDURE PaBachillerTb14_EliminarBachiller(IN IdBac INT)
BEGIN
	DELETE FROM BachillerTb14 WHERE bachillertb14.InBachillerTb14_IdBachiller = IdBac;
END $

/**************************************************************************************************************************************************************/

-- -----------------------------------------------------
-- ESPECIALIDAD
-- -----------------------------------------------------

	/* EspecialidadTb16 */
/* Guardar Especialidad */
DROP PROCEDURE IF EXISTS PaEspecialidadTb16_GuardarEspecialidad;
DELIMITER $
CREATE PROCEDURE PaEspecialidadTb16_GuardarEspecialidad(IN NomEsp VARCHAR(20), IN Cupo INT)
BEGIN
	INSERT INTO EspecialidadTb16 ( VcEspecialidadTb16_Nombre, InEspecialidadTb16_Cupo)
    VALUES (NomEsp, Cupo);
END $

/* Buscar Especialidad */
DROP PROCEDURE IF EXISTS PaEspecialidadTb16_BuscarEspecialidad;
DELIMITER $
CREATE PROCEDURE PaEspecialidadTb16_BuscarEspecialidad(IN IdEsp INT)
BEGIN
	SELECT InEspecialidadTb16_IdEspecialidad AS 'Id_Especialidad', VcEspecialidadTb16_Nombre AS 'Nom_Especialidad',
    InEspecialidadTb16_Cupo AS 'Cupo_Especialidad'
    FROM EspecialidadTb16
     WHERE InEspecialidadTb16_IdEspecialidad = IdEsp;
END $

/* Buscar Dinamico Especialidad */
DROP PROCEDURE IF EXISTS PaEspecialidadTb16_BuscarEspecialidadD;
DELIMITER $
CREATE PROCEDURE PaEspecialidadTb16_BuscarEspecialidadD(IN IdEsp INT)
BEGIN
	select InEspecialidadTb16_IdEspecialidad as 'Id_Especialidad', VcEspecialidadTb16_Nombre as 'Nom_Especialidad',
    InEspecialidadTb16_Cupo as 'Cupo_Especialidad'
    from EspecialidadTb16
     where InEspecialidadTb16_IdEspecialidad like concat('%',dato,'%')
     or VcEspecialidadTb16_Nombre like concat('%',dato,'%')
     or InEspecialidadTb16_Cupo like concat('%',dato,'%');
END $

/* Actualizar Especialidad */
DROP PROCEDURE IF EXISTS PaEspecialidadTb16_ActualizarEspecialidad;
DELIMITER $
CREATE PROCEDURE PaEspecialidadTb16_ActualizarEspecialidad(IN IdEsp INT, IN NomEsp VARCHAR(20), IN Cupo INT)
BEGIN
	UPDATE EspecialidadTb16
    SET   especialidadtb16.VcEspecialidadTb16_Nombre = NomEsp, especialidadtb16.InEspecialidadTb16_Cupo = Cupo
    WHERE especialidadtb16.InEspecialidadTb16_IdEspecialidad = IdEsp;
END $

/* Listar Todos Especialidad */
DROP PROCEDURE IF EXISTS PaEspecialidadTb16_Listar_Todos;
DELIMITER $
CREATE PROCEDURE PaEspecialidadTb16_Listar_Todos()
BEGIN
	SELECT InEspecialidadTb16_IdEspecialidad AS 'Id', VcEspecialidadTb16_Nombre AS 'Nombre',InEspecialidadTb16_Cupo  AS 'Cupo' 
    FROM especialidadtb16
	ORDER BY InEspecialidadTb16_IdEspecialidad;
END $

/* Listar Especialidad */
DROP PROCEDURE IF EXISTS PaEspecialidadTb16_Listar;
DELIMITER $
CREATE PROCEDURE PaEspecialidadTb16_Listar(IN `inicio` INT, IN `final` INT)
BEGIN
	SELECT InEspecialidadTb16_IdEspecialidad AS 'Id', VcEspecialidadTb16_Nombre AS 'Nombre',InEspecialidadTb16_Cupo  AS 'Cupo' 
    FROM especialidadtb16
	ORDER BY 'date added' LIMIT inicio,final;
END $

/* Eliminar Especialidad */
DROP PROCEDURE IF EXISTS PaEspecialidadTb16_EliminarEspecialidad;
DELIMITER $
CREATE PROCEDURE PaEspecialidadTb16_EliminarEspecialidad(IN IdEs INT)
BEGIN
	DELETE FROM EspecialidadTb16 
    WHERE especialidadtb16.InEspecialidadTb16_IdEspecialidad = IdEs;
END $

/**************************************************************************************************************************************************************/

-- -----------------------------------------------------
-- MATERIA
-- -----------------------------------------------------

	/* MateriaTb17 */
/* Guardar Materia */
DROP PROCEDURE IF EXISTS PaMateriaTb17_GuardarMateria;
DELIMITER $
CREATE PROCEDURE PaMateriaTb17_GuardarMateria(IN NomMat VARCHAR(20))
BEGIN
	INSERT INTO MateriaTb17 (VcMateriaTb17_Nombre)
    VALUES (NomMat);
END $

/* Buscar Materia */
DROP PROCEDURE IF EXISTS PaMateriaTb17_BuscarMateria;
DELIMITER $
CREATE PROCEDURE PaMateriaTb17_BuscarMateria(IN IdMat INT)
BEGIN
	SELECT InMateriaTb17_IdMateria AS 'Id', VcMateriaTb17_Nombre AS 'Nombre' 
    FROM MateriaTb17
     WHERE InMateriaTb17_IdMateria = IdMat;
END $

/* Buscar Dinamico Materia */
DROP PROCEDURE IF EXISTS PaMateriaTb17_BuscarMateriaD;
DELIMITER $
CREATE PROCEDURE PaMateriaTb17_BuscarMateriaD(IN dato VARCHAR(20))
BEGIN
	SELECT InMateriaTb17_IdMateria AS 'Id', VcMateriaTb17_Nombre AS 'Nombre' 
    FROM MateriaTb17
     WHERE InMateriaTb17_IdMateria LIKE CONCAT('%',dato,'%')
     OR VcMateriaTb17_Nombre LIKE CONCAT('%',dato,'%');
END $

/* Actualizar Materia */
DROP PROCEDURE IF EXISTS PaMateriaTb17_ActualizarMateria;
DELIMITER $
CREATE PROCEDURE PaMateriaTb17_ActualizarMateria(IN IdMat INT, IN NomMat VARCHAR(20))
BEGIN
	UPDATE MateriaTb17
    SET   materiatb17.VcMateriaTb17_Nombre = NomMat
    WHERE materiatb17.InMateriaTb17_IdMateria = IdMat;
END $

/* Listar Materia Paginacion*/
DROP PROCEDURE IF EXISTS PaMateriaTb17_Listar;
DELIMITER $
CREATE PROCEDURE PaMateriaTb17_Listar(IN inicio INT, IN final INT)
BEGIN
	SELECT InMateriaTb17_IdMateria AS 'Id', VcMateriaTb17_Nombre AS 'Nombre'
    FROM  MateriaTb17
    ORDER BY 'date added' LIMIT inicio,final;
END $

/* Listar Materia Paginacion*/
DROP PROCEDURE IF EXISTS PaMateriaTb17_ListarA;
DELIMITER $
CREATE PROCEDURE PaMateriaTb17_ListarA()
BEGIN
	SELECT m.InMateriaTb17_IdMateria AS 'Id', m.VcMateriaTb17_Nombre AS 'Materia',  
    usutb01.VcUsuTb01_Cedula AS 'Cedula',
   concat(usutb01.VcUsuTb01_Nombre, ' ' ,usutb01.VcUsuTb01_Ape1, ' ', usutb01.VcUsuTb01_Ape2) as 'Asignado'
    FROM asigmateriatb19 as a inner join  usutb01 on  usutb01.VcUsuTb01_Cedula = a.VcProfTb04_IdProfesor
    join MateriaTb17 as m on a.InMateriaTb17_IdMateria = m.InMateriaTb17_IdMateria
    ORDER BY 'date added';
END $

/* Listar Estudiante por seccion*/
DROP PROCEDURE IF EXISTS PaSeccionTb20_ListarEst;
DELIMITER $
CREATE PROCEDURE PaSeccionTb20_ListarEst(in idsec int)
BEGIN
    select usutb01.VcUsuTb01_Cedula AS 'Cedula',
   concat(usutb01.VcUsuTb01_Nombre, ' ' ,usutb01.VcUsuTb01_Ape1, ' ', usutb01.VcUsuTb01_Ape2) as 'Estudiante',
concat(gradotb13.VcGradoTb13_NombreGrado,'-', secciontb20.InSeccionTb20_Num_Grupo) as 'Seccion'
from usutb01, esttb03, secciontb20 inner join secgradotb25 on secgradotb25.InSeccionTb20_IdSeccion = secciontb20.InSeccionTb20_IdSeccion 
join gradotb13 on secgradotb25.InGradoTb13_IdGrado = gradotb13.InGradoTb13_IdGrado
where secciontb20.InSeccionTb20_IdSeccion = idsec
and  usutb01.VcUsuTb01_Cedula = esttb03.VcEstTb03_IdEstudiante
ORDER BY esttb03.VcEstTb03_IdEstudiante ASC;
END $

/* Listar Profesor para Asignar */
DROP PROCEDURE IF EXISTS PaProfTb04_Listar_Asigna;
DELIMITER $
CREATE PROCEDURE PaProfTb04_Listar_Asigna()
BEGIN
	SELECT usutb01.VcUshorariostb29Tb01_Cedula AS 'Cedula',
    concat(usutb01.VcUsuTb01_Nombre, ' ' ,usutb01.VcUsuTb01_Ape1, ' ', usutb01.VcUsuTb01_Ape2) as 'Profesor'
    FROM usutb01 INNER JOIN proftb04 ON usutb01.VcUsuTb01_Cedula = proftb04.VcProfTb04_IdProfesor 
    ORDER BY usutb01.VcUsuTb01_Cedula ;
END $

/* Listar Materia sin Paginacion */
DROP PROCEDURE IF EXISTS PaMateriaTb17_Listar_Todos;
DELIMITER $
CREATE PROCEDURE PaMateriaTb17_Listar_Todos()
BEGIN
	SELECT InMateriaTb17_IdMateria AS 'Id', VcMateriaTb17_Nombre AS 'Nombre' 
    FROM MateriaTb17;
END $

/* Eliminar Materia */
DROP PROCEDURE IF EXISTS PaMateriaTb17_EliminarMateria;
DELIMITER $
CREATE PROCEDURE PaMateriaTb17_EliminarMateria(IN IdMat INT)
BEGIN
	DELETE FROM MateriaTb17 WHERE materiatb17.InMateriaTb17_IdMateria = IdMat;
END $

/**************************************************************************************************************************************************************/

-- -----------------------------------------------------
-- ASISTENCIA DE CLASE
-- -----------------------------------------------------

	/* AsistClaseTb18 */
/* Guardar Asistencia Clase */
DROP PROCEDURE IF EXISTS PaAsistClaseTb18_GuardarAsistClase;
DELIMITER $
CREATE PROCEDURE PaAsistClaseTb18_GuardarAsistClase(IN Fec DATE, IN Hora TIME, IN Estado VARCHAR(20), IN IdMa INT)
BEGIN
	INSERT INTO AsistClaseTb18 (DtAsistClaseTb18_Fecha, TmAsistClaseTb18_Hora, VcAsistClaseTb18_Estado, InMateriaTb17_IdMateria)
    VALUES (Fec, Hora, Estado, IdMa);
END $

/* Buscar Asistencia Clase */
DROP PROCEDURE IF EXISTS PaAsistClaseTb18_BuscarAsistClase;
DELIMITER $
CREATE PROCEDURE PaAsistClaseTb18_BuscarAsistClase(IN IdAsis INT)
BEGIN
	SELECT InAsistClaseTb18_IdAsistClase AS 'Id', DtAsistClaseTb18_Fecha AS 'Fecha', 
    TmAsistClaseTb18_Hora AS 'Hora', VcAsistClaseTb18_Estado AS 'Estado', InMateriaTb17_IdMateria AS 'Id_Materia' 
    FROM AsistClaseTb18
     WHERE asistclasetb18.InAsistClaseTb18_IdAsistClase = IdAsis;
END $

/* Actualizar Asistencia Clase */
DROP PROCEDURE IF EXISTS PaAsistClaseTb18_ActualizarAsistClase;
DELIMITER $
CREATE PROCEDURE PaAsistClaseTb18_ActualizarAsistClase(IN IdAsist INT, IN Fec DATE, 
IN Hora TIME, IN Estado VARCHAR(20), IN IdMa INT)
BEGIN
	UPDATE AsistClaseTb18
    SET   asistclasetb18.DtAsistClaseTb18_Fecha = Fec, asistclasetb18.TmAsistClaseTb18_Hora = Hora, 
    asistclasetb18.VcAsistClaseTb18_Estado = Estado, asistclasetb18.InMateriaTb17_IdMateria = IdMa
    WHERE asistclasetb18.InAsistClaseTb18_IdAsistClase = IdAsist;
END $

/* Listar Asistencia Clase */
DROP PROCEDURE IF EXISTS PaAsistClaseTb18_Listar;
DELIMITER $
CREATE PROCEDURE PaAsistClaseTb18_Listar(IN `inicio` INT, IN `final` INT)
BEGIN
	SELECT iNAsistClaseTb18_IdAsistClase AS 'Id',DtAsistClaseTb18_Fecha AS 'Fecha', TmAsistClaseTb18_Hora AS 'Hora',
    VcAsistClaseTb18_Estado AS 'Estado', InMateriaTb17_IdMateria AS 'Id_Materia' 
    FROM AsistClaseTb18
	ORDER BY 'date added' LIMIT inicio,final;
END $

/* Eliminar Asistencia Clase */
DROP PROCEDURE IF EXISTS PaAsistClaseTb18_EliminarAsistClase;
DELIMITER $
CREATE PROCEDURE PaAsistClaseTb18_EliminarAsistClase(IN IdAsi INT)
BEGIN
	DELETE FROM AsistClaseTb18 WHERE asistclasetb18.InAsistClaseTb18_IdAsistClase = IdAsi;
END $

/**************************************************************************************************************************************************************/

-- -----------------------------------------------------
-- ASIGNA MATERIA
-- -----------------------------------------------------

	/* AsigMateriaTb19 */
/* Asigna Materia */
DROP PROCEDURE IF EXISTS PaAsigmateriaTb19_Asignar;
DELIMITER $
CREATE PROCEDURE PaAsigmateriaTb19_Asignar(IN IdMat INT, IN IdProf VARCHAR(20))
BEGIN
	INSERT INTO asigmateriatb19(InMateriaTb17_IdMateria,VcProfTb04_IdProfesor) 
    VALUES(IdMat,IdProf);
END $

/* Asigna Profesor a Materia */
DROP PROCEDURE IF EXISTS PaAsigmateriaTb19_Profe_Materia;
DELIMITER $
CREATE PROCEDURE PaAsigmateriaTb19_Profe_Materia(IN IdProf VARCHAR(20))
BEGIN
	SELECT materiatb17.InMateriaTb17_IdMateria AS 'Id_Materia', materiatb17.VcMateriaTb17_Nombre AS 'nombre' 
    FROM materiatb17 INNER JOIN asigmateriatb19 ON materiatb17.InMateriaTb17_IdMateria = asigmateriatb19.InMateriaTb17_IdMateria 
    WHERE asigmateriatb19.VcProfTb04_IdProfesor = IdProf;
END $


/**************************************************************************************************************************************************************/

-- -----------------------------------------------------
-- SECCIÓN
-- -----------------------------------------------------

	/* SeccionTb20 */
/* Guardar Seccion */
DROP PROCEDURE IF EXISTS PaSeccionTb20_Guardar_Seccion;
DELIMITER $
CREATE PROCEDURE PaSeccionTb20_Guardar_Seccion(IN cupo INT, IN num_grupo INT, IN Grado INT)  
BEGIN
DECLARE CONT INT;
DECLARE id INT;
SELECT COUNT(*) INTO CONT FROM SeccionTb20;
IF(CONT > 0)
THEN INSERT INTO secciontb20(InSeccionTb20_cupo,InSeccionTb20_Num_Grupo) VALUES(cupo,num_grupo);
SELECT InSeccionTb20_IdSeccion FROM secciontb20 ORDER BY InSeccionTb20_IdSeccion DESC LIMIT 1 INTO id;
INSERT INTO secgradotb25(InGradoTb13_IdGrado,InSeccionTb20_IdSeccion)
SELECT gradotb13.InGradoTb13_IdGrado,secciontb20.InSeccionTb20_IdSeccion 
FROM gradotb13,secciontb20 
WHERE gradotb13.InGradoTb13_IdGrado = Grado AND secciontb20.InSeccionTb20_IdSeccion = id;
ELSE 
		INSERT INTO secciontb20(InSeccionTb20_cupo,InSeccionTb20_Num_Grupo) VALUES(cupo,num_grupo);
		INSERT INTO secgradotb25(InGradoTb13_IdGrado,InSeccionTb20_IdSeccion)
SELECT gradotb13.InGradoTb13_IdGrado,secciontb20.InSeccionTb20_IdSeccion 
FROM gradotb13,secciontb20 
WHERE gradotb13.InGradoTb13_IdGrado = Grado;
END IF;
END$

/* Buscar Seccion */
DROP PROCEDURE IF EXISTS PaSeccionTb20_BuscarSeccion;
DELIMITER $
CREATE PROCEDURE PaSeccionTb20_BuscarSeccion(IN id_sec INT)
BEGIN
SELECT secciontb20.InSeccionTb20_IdSeccion AS 'ID_Seccion',secciontb20.InSeccionTb20_Cupo AS 'cupo',
secciontb20.InSeccionTb20_Num_Grupo AS 'Num_grupo',gradotb13.VcGradoTb13_NombreGrado AS 'Grado' 
FROM secciontb20 INNER JOIN secgradotb25 ON secgradotb25.InSeccionTb20_IdSeccion = secciontb20.InSeccionTb20_IdSeccion 
JOIN gradotb13 ON secgradotb25.InGradoTb13_IdGrado = gradotb13.InGradoTb13_IdGrado
WHERE secciontb20.InSeccionTb20_IdSeccion = id_sec;
END $

/* Buscar Dinamico Seccion */
DROP PROCEDURE IF EXISTS PaSeccionTb20_BuscarSeccionD;
DELIMITER $
CREATE PROCEDURE PaSeccionTb20_BuscarSeccionD( IN dato VARCHAR(20))
BEGIN
SELECT secciontb20.InSeccionTb20_IdSeccion AS 'ID_Seccion',secciontb20.InSeccionTb20_Cupo AS 'cupo',
secciontb20.InSeccionTb20_Num_Grupo AS 'Num_grupo',gradotb13.VcGradoTb13_NombreGrado AS 'Grado' 
FROM secciontb20 INNER JOIN secgradotb25 ON secgradotb25.InSeccionTb20_IdSeccion = secciontb20.InSeccionTb20_IdSeccion 
JOIN gradotb13 ON secgradotb25.InGradoTb13_IdGrado = gradotb13.InGradoTb13_IdGrado
WHERE secciontb20.InSeccionTb20_IdSeccion LIKE CONCAT('%',dato,'%')
OR secciontb20.InSeccionTb20_Cupo LIKE CONCAT('%',dato,'%')
OR secciontb20.InSeccionTb20_Num_Grupo LIKE CONCAT('%',dato);
END $

/* Actualizar Seccion */
DROP PROCEDURE IF EXISTS PaSeccionTb20_ActualizarSeccion;
DELIMITER $
CREATE PROCEDURE PaSeccionTb20_ActualizarSeccion(IN `id_grupo` INT, IN `cupo` INT, IN `num_grupo` INT)
BEGIN
	UPDATE secciontb20 SET InSeccionTb20_Num_Grupo = num_grupo,InSeccionTb20_Cupo = cupo 
    WHERE InSeccionTb20_IdSeccion = id_grupo;
END $

/* Listar Seccion */
DROP PROCEDURE IF EXISTS PaSeccionTb20_Lista_Sec;
DELIMITER $
CREATE PROCEDURE PaSeccionTb20_Lista_Sec()
BEGIN
select secciontb20.InSeccionTb20_IdSeccion as 'ID_Seccion',
concat(gradotb13.VcGradoTb13_NombreGrado,'-', secciontb20.InSeccionTb20_Num_Grupo) as 'Seccion'
from secciontb20 inner join secgradotb25 on secgradotb25.InSeccionTb20_IdSeccion = secciontb20.InSeccionTb20_IdSeccion 
join gradotb13 on secgradotb25.InGradoTb13_IdGrado = gradotb13.InGradoTb13_IdGrado
ORDER BY GradoTb13.VcGradoTb13_NombreGrado ASC;
END $

/* Listar Seccion con paginacion*/
DROP PROCEDURE IF EXISTS PaSeccionTb20_Listar;
DELIMITER $
CREATE PROCEDURE PaSeccionTb20_Listar(IN inicio INT, IN final INT)
BEGIN
SELECT secciontb20.InSeccionTb20_IdSeccion AS 'ID_Seccion',secciontb20.InSeccionTb20_Cupo AS 'cupo',
secciontb20.InSeccionTb20_Num_Grupo AS 'Num_grupo',gradotb13.VcGradoTb13_NombreGrado AS 'Grado'
FROM secciontb20 INNER JOIN secgradotb25 ON secgradotb25.InSeccionTb20_IdSeccion = secciontb20.InSeccionTb20_IdSeccion 
JOIN gradotb13 ON secgradotb25.InGradoTb13_IdGrado = gradotb13.InGradoTb13_IdGrado
ORDER BY 'date added' LIMIT inicio,final;
END $

/* Listar Todos Seccion */
DROP PROCEDURE IF EXISTS PaSeccionTb20_Listar_Todos;
DELIMITER $
CREATE PROCEDURE PaSeccionTb20_Listar_Todos()
BEGIN
select secciontb20.InSeccionTb20_IdSeccion as 'ID_Seccion',
secciontb20.InSeccionTb20_Cupo as 'Cupo',
concat(gradotb13.VcGradoTb13_NombreGrado, '-' ,secciontb20.InSeccionTb20_Num_Grupo) as 'Seccion' 
from secciontb20 inner join secgradotb25 on secgradotb25.InSeccionTb20_IdSeccion = secciontb20.InSeccionTb20_IdSeccion 
join gradotb13 on secgradotb25.InGradoTb13_IdGrado = gradotb13.InGradoTb13_IdGrado  
ORDER BY 'date added';
END $

/* Eliminar Seccion */
DROP PROCEDURE IF EXISTS PaSeccionTb20_Borrar_Seccion;
DELIMITER $
CREATE PROCEDURE PaSeccionTb20_Borrar_Seccion(IN id_seccion INT)
BEGIN
	DELETE FROM SeccionTb20 WHERE InSeccionTb20_IdSeccion = id_seccion;
END $

/**************************************************************************************************************************************************************/

-- -----------------------------------------------------
-- ASISTENCIA ESTUDIANTE
-- -----------------------------------------------------

	/* AsistEstTb23 */
/* Listar Asistencia Estudiantes*/
DROP PROCEDURE IF EXISTS PaAsistEstTb23_Listar;
DELIMITER $
CREATE PROCEDURE PaAsistEstTb23_Listar(IN `idSec` INT, IN `IdMater` VARCHAR(20))  
BEGIN
select usutb01.VcUsuTb01_Cedula as 'Cedula',usutb01.VcUsuTb01_Nombre as 'Nombre',
usutb01.VcUsuTb01_Ape1 as 'Apellido1',usutb01.VcUsuTb01_Ape2 as 'Apellido2',
asistclasetb18.VcAsistClaseTb18_Estado as 'Estado',asistclasetb18.TmAsistClaseTb18_Hora as 'Hora',
asistclasetb18.DtAsistClaseTb18_Fecha as 'Fecha' 
from usutb01 inner join esttb03 on usutb01.VcUsuTb01_Cedula = esttb03.VcEstTb03_IdEstudiante 
join asistesttb23 on esttb03.VcEstTb03_IdEstudiante = asistesttb23.VcEstTb03_IdEstudiante 
join secesttb28 on esttb03.VcEstTb03_IdEstudiante = secesttb28.VcEstTb03_IdEstudiante 
join asistclasetb18 on asistesttb23.InAsistClaseTb18_IdAsistClase = asistclasetb18.InAsistClaseTb18_IdAsistClase 
where asistclasetb18.InMateriaTb17_IdMateria = IdMater and secesttb28.InSeccionTb20_IdSeccion = idSec 
order by asistclasetb18.DtAsistClaseTb18_Fecha desc;
end $

/* Listar Asistencias*/
DROP PROCEDURE IF EXISTS PaAsistEstTb23_Listar_Est;
DELIMITER $
CREATE PROCEDURE PaAsistEstTb23_Listar_Est(IN `IdEst` VARCHAR(20))  
BEGIN
select asistclasetb18.VcAsistClaseTb18_Estado as 'Estado',asistclasetb18.TmAsistClaseTb18_Hora as 'Hora',
asistclasetb18.DtAsistClaseTb18_Fecha as 'Fecha',materiatb17.VcMateriaTb17_Nombre as 'Materia' 
from asistclasetb18 inner join asistesttb23 on asistclasetb18.InAsistClaseTb18_IdAsistClase = asistesttb23.InAsistClaseTb18_IdAsistClase 
join materiatb17 on asistclasetb18.InMateriaTb17_IdMateria = materiatb17.InMateriaTb17_IdMateria 
where asistesttb23.VcEstTb03_IdEstudiante = IdEst;
END $
/**************************************************************************************************************************************************************/

	/* SeccionprofTb27 */
/* Asignar prof a seccion*/
DROP PROCEDURE IF EXISTS PaSeccionprofTb27_Asignar;
DELIMITER $
CREATE PROCEDURE PaSeccionprofTb27_Asignar(in ids int, in idp varchar(20))
BEGIN
insert into seccionproftb27(InSeccionTb20_IdSeccion,VcProfTb04_IdProfesor) 
    values(ids,idp);
END$
-- -----------------------------------------------------
-- SECCION ESTUDIANTE
-- -----------------------------------------------------

	/* SecEstTb28 */
/* Listar Asistencia Estudiantes por Seccion*/
DROP PROCEDURE IF EXISTS PaSecEstTb28_Listar_Asist;
DELIMITER $
CREATE PROCEDURE PaSecEstTb28_Listar_Asist(IN idSec INT)
BEGIN
SELECT UsuTb01.VcUsuTb01_Cedula AS 'Cedula', UsuTb01.VcUsuTb01_Nombre  AS 'Nombre', UsuTb01.VcUsuTb01_Ape1  AS 'Apellido1',
 UsuTb01.VcUsuTb01_Ape2  AS 'Apellido2' 
 FROM usutb01 INNER JOIN secesttb28 ON usutb01.VcUsuTb01_Cedula = secesttb28.VcEstTb03_IdEstudiante 
 WHERE secesttb28.InSeccionTb20_IdSeccion = idSec;
END $

/**************************************************************************************************************************************************************/

-- -----------------------------------------------------
-- HORARIO
-- -----------------------------------------------------

	/* HorariosTb29 */
/* Horario */
DROP PROCEDURE IF EXISTS PaHorariosTb29_Profe_Mater;
DELIMITER $
CREATE PROCEDURE PaHorariosTb29_Profe_Mater(IN idma INT)
BEGIN
	SELECT usutb01.VcUsuTb01_Cedula AS 'Cedula',usutb01.VcUsuTb01_Nombre AS 'Nombre',usutb01.VcUsuTb01_Ape1 AS 'Apellido1',
	usutb01.VcUsuTb01_Ape2 AS 'Apellido2' 
	FROM usutb01 INNER JOIN proftb04 ON usutb01.VcUsuTb01_Cedula = proftb04.VcProfTb04_IdProfesor 
	JOIN asigmateriatb19 ON proftb04.VcProfTb04_IdProfesor = asigmateriatb19.VcProfTb04_IdProfesor 
	WHERE asigmateriatb19.InMateriaTb17_IdMateria = idma 
	ORDER BY 'date added';
END $

/* Guardar Horario */
DROP PROCEDURE IF EXISTS PaHorariosTb29_AgregarHorario;
DELIMITER $
CREATE PROCEDURE PaHorariosTb29_AgregarHorario(IN dia varchar(20), in ini time, in fin time)
BEGIN
	insert into horariostb29 (VcHorariosTb29_Dia, TmHorariosTb29_Hora_Inicio, TmHorariosTb29_Hora_Final)
    values (dia, ini, fin);
END $

/* Asignar Horario (Matricula) */
DROP PROCEDURE IF EXISTS PaHorariosTb29_AsignarHorario;
DELIMITER $
CREATE PROCEDURE PaHorariosTb29_AsignarHorario(in idsec int,in idHo int, in idmat int, in idprof varchar(20))
BEGIN
	insert into matriculatb30 (InSeccionTb20_IdSeccion,InHorariosTb29_IdHorario,
    InMateriaTb17_IdMateria,VcProfTb04_IdProfesor)
    values(idsec, idHo, idmat, idprof);
END $

/* Listar Horario */
DROP PROCEDURE IF EXISTS PaHorariosTb29_Listar;
DELIMITER $
CREATE PROCEDURE PaHorariosTb29_Listar(IN `inicio` INT, IN `final` INT)
BEGIN
	SELECT HorariosTb29.InHorariosTb29_IdHorario AS 'Id', 
    HorariosTb29.VcHorariosTb29_Dia AS 'Dia',
    HorariosTb29.TmHorariosTb29_Hora_Inicio AS 'Hora_Inicio', 
    HorariosTb29.TmHorariosTb29_Hora_Final AS 'Hora_Fin' ,
    concat(GradoTb13.VcGradoTb13_NombreGrado, '-' ,
    SeccionTb20.InSeccionTb20_Num_Grupo) as 'Seccion' ,
    materiatb17.VcMateriaTb17_Nombre as 'Materia',
    concat(UsuTb01.VcUsuTb01_Nombre, ' ', UsuTb01.VcUsuTb01_Ape1) as 'Prof' 
FROM  
GradoTb13,
   MatriculaTb30 inner join HorariosTb29 on HorariosTb29.InHorariosTb29_IdHorario =  MatriculaTb30.InHorariosTb29_IdHorario
   join ProfTb04 on matriculatb30.VcProfTb04_IdProfesor = ProfTb04.VcProfTb04_IdProfesor
   join asigmateriatb19 on matriculatb30.VcProfTb04_IdProfesor = asigmateriatb19.VcProfTb04_IdProfesor
   join UsuTb01 on matriculatb30.VcProfTb04_IdProfesor = UsuTb01.VcUsuTb01_Cedula 
   join SeccionTb20 on matriculatb30.InSeccionTb20_IdSeccion = seccionTb20.InSeccionTb20_IdSeccion
   join MateriaTb17 on matriculatb30.InMateriaTb17_IdMateria = MateriaTb17.InMateriaTb17_IdMateria

ORDER BY 'date added' LIMIT inicio,final;
END $


/* Realizar matrícula de Profesor*/
DROP PROCEDURE IF EXISTS PaMatriculaTb30_MatriculaProf;
DELIMITER $
CREATE PROCEDURE PaMatriculaTb30_MatriculaProf(in sec int, in horario int, in mat int, in prof varchar(20))
BEGIN
	insert into matriculatb30 (InSeccionTb20_IdSeccion,InHorariosTb29_IdHorario,InMateriaTb17_IdMateria,VcProfTb04_IdProfesor)
    values(sec, horario, mat, prof);
end $


/* Buscar Horario */
DROP PROCEDURE IF EXISTS PaHorariosTb29_BuscarHorario;
DELIMITER $
CREATE PROCEDURE PaHorariosTb29_BuscarHorario(IN IdHo INT)
BEGIN
	SELECT h.InHorariosTb29_IdHorario AS 'Id', h.InMateriaTb17_IdMateria AS 'Id_Materia', 
    h.VcHorariosTb29_Dia AS 'Dia', h.TmHorariosTb29_Hora_Inicio AS 'Hora_Inicio', 
    h.TmHorariosTb29_Hora_Final AS 'Hora_Fin' 
    FROM HorariosTb29 h
	WHERE h.InHorariosTb29_IdHorario = IdHo;
END $

/* Actualizar Horario */
DROP PROCEDURE IF EXISTS PaHorariosTb29_ActualizarHorario;
DELIMITER $
CREATE PROCEDURE PaHorariosTb29_ActualizarHorario(IN Dia VARCHAR(20), IN HoraIni TIME, IN HoraFin TIME)
BEGIN
	UPDATE HorariosTb29 h
    SET  h.VcHorariosTb29_Dia = Dia, h.TmHorariosTb29_Hora_Inicio = HoraIni, h.TmHorariosTb29_Hora_Final = HoraFin
    WHERE h.InHorariosTb29_IdHorario = IdHorario;
END $

/* Eliminar Horario */
DROP PROCEDURE IF EXISTS PaHorariosTb29_EliminarHorario;
DELIMITER $
CREATE PROCEDURE PaHorarioTb28_EliminarHorario(IN IdHo INT)
BEGIN
	DELETE FROM HorariosTb29  
    WHERE HorariosTb29.InHorarioTb28_IdHorario = IdHo;
END $

/**************************************************************************************************************************************************************/

-- -----------------------------------------------------
-- MATRICULA
-- -----------------------------------------------------

	/* MatriculaTb30 */
/* Carga Seccion  */
DROP PROCEDURE IF EXISTS PaMatriculaTb30_CargarSeccion;
DELIMITER $
CREATE PROCEDURE PaMatriculaTb30_CargarSeccion(IN idMater INT, IN idProf VARCHAR(20))
BEGIN
select secciontb20.InSeccionTb20_IdSeccion as 'Id_Seccion',gradotb13.VcGradoTb13_NombreGrado as 'Grado' ,secciontb20.InSeccionTb20_Num_Grupo as 'num_grupo'
from secciontb20 inner join secgradotb25 on secciontb20.InSeccionTb20_IdSeccion = secgradotb25.InSeccionTb20_IdSeccion 
join gradotb13 on secgradotb25.InGradoTb13_IdGrado = gradotb13.InGradoTb13_IdGrado 
join matriculatb30 on secciontb20.InSeccionTb20_IdSeccion = matriculatb30.InSeccionTb20_IdSeccion 
where matriculatb30.InMateriaTb17_IdMateria = idMater and matriculatb30.VcProfTb04_IdProfesor = idProf;
END $
 
/**************************************************************************************************************************************************************/

-- -----------------------------------------------------
-- SEGURIDAD
-- -----------------------------------------------------

	/* SeguridadTb31 */
/* Valida usuario  */
DROP PROCEDURE IF EXISTS PaSeguridadTb31_Validar_Usu;  
DELIMITER $
CREATE PROCEDURE PaSeguridadTb31_Validar_Usu (IN usu VARCHAR(20), IN pass VARCHAR(20)) 
BEGIN
IF EXISTS(SELECT AdmTb02.VcAdmTb02_IdAdmin FROM AdmTb02  /*Administrador*/
	WHERE AdmTb02.VcAdmTb02_IdAdmin = usu AND AdmTb02.VcAdmTb02_Clave = pass)
THEN 
	SELECT SeguridadTb31.VcSeguridadTb31_Funcion AS 'Funcion',SeguridadTb31.VcSeguridadTb31_Glyphicons AS 'Iconos',
	SeguridadTb31.VcSeguridadTb31_SideNav AS 'SideNav' FROM SeguridadTb31 
	WHERE SeguridadTb31.InSeguridadTb31_Nivel = 1;
ELSEIF EXISTS(SELECT ProfTb04.VcProfTb04_IdProfesor FROM ProfTb04 /*Profesor*/
    WHERE ProfTb04.VcProfTb04_IdProfesor = usu AND ProfTb04.VcProfTb04_Clave = pass)
THEN 
	SELECT SeguridadTb31.VcSeguridadTb31_Funcion AS 'Funcion',SeguridadTb31.VcSeguridadTb31_Glyphicons AS 'Iconos',
    SeguridadTb31.VcSeguridadTb31_SideNav AS 'SideNav' FROM SeguridadTb31 
    WHERE SeguridadTb31.InSeguridadTb31_Nivel = 2;
ELSEIF EXISTS(SELECT enctb05.VcEncTb05_IdEncargado FROM EncTb05 /*Encargado*/
	WHERE EncTb05.VcEncTb05_IdEncargado = USER AND EncTb05.Vcenctb05_Clave = pass)
THEN 
	SELECT SeguridadTb31.VcSeguridadTb31_Funcion AS 'Funcion',SeguridadTb31.VcSeguridadTb31_Glyphicons AS 'Iconos',
	SeguridadTb31.VcSeguridadTb31_SideNav AS 'SideNav' FROM SeguridadTb31 
	WHERE SeguridadTb31.InSeguridadTb31_Nivel = 3;
ELSEIF EXISTS(SELECT  funtb06.VcFunTb06_IdFuncionario FROM funtb06 /*Funcionario*/
	WHERE funtb06.VcFunTb06_IdFuncionario = USER AND funtb06.VcFunTb06_Clave = pass)
THEN 
	SELECT SeguridadTb31.VcSeguridadTb31_Funcion AS 'Funcion',SeguridadTb31.VcSeguridadTb31_Glyphicons AS 'Iconos',
	SeguridadTb31.VcSeguridadTb31_SideNav AS 'SideNav' FROM SeguridadTb31 
	WHERE SeguridadTb31.InSeguridadTb31_Nivel = 4;
	END IF;
END $

/**************************************************************************************************************************************************************/

-- -----------------------------------------------------
-- REGISTROS
-- -----------------------------------------------------
DELIMITER $$
	/* Encargado Tb05*/
/* DATOS=> IdEnc, NomEnc,  Ape1, Ape2, Direccion, Sexo, Telefono, Email, Clave */
CALL PaEncTb05_GuardarEnc('101074994','FRANCISCA','ROJAS','UREÑA','Nicoya','F','26453312','fran@gmail.com','1234');
CALL PaEncTb05_GuardarEnc('101141843','SACRAMENTO','MORA','MORALES', 'Moracia','M','77654423','sacra@outlook.com','1234');
CALL PaEncTb05_GuardarEnc('101230816','VIRGINIA','ROVIRA','PANIAGUA','Nosara','F','65441233','virg@outlook.com','1234');
CALL PaEncTb05_GuardarEnc('101260454','MARIA DE LOS ANGELES','ESQUIVEL','ESQUIVEL','Nandayure','F','24356745','esq@outlook.com','1234');
CALL PaEncTb05_GuardarEnc('101270084','JESUS','FLORES','AGUERO','Nicoya','M','22456788','jes@outlook.com','1234');
CALL PaEncTb05_GuardarEnc('101280455','SALVADOR','VILLALTA','MORA','Samara','M','67553699','salva@outlook.com','1234');
CALL PaEncTb05_GuardarEnc('101340245','ROSA SANTANA','PORRAS','AVALOS','Hojancha','F','60908766','santa@outlook.com','1234');
CALL PaEncTb05_GuardarEnc('101380356','ISABEL','PARRA','MOYA','Los Angeles','F','87669099','isab@outlook.com','1234');
CALL PaEncTb05_GuardarEnc('101390480','FIDELINA','HERNANDEZ','ARIAS','San José','F','87662299','fid@outlook.com','1234');
CALL PaEncTb05_GuardarEnc('101430812','CARMEN','BLANCO','CALVO','Nicoya','F','88669199','carm@outlook.com','1234');

CALL sisae.PaEncTb05_GuardarEnc('101440109','ESPIRITU SANTO','MONTERO','CORRALES','Los Angeles','M','77658890','esp@gmail.com','1234');
CALL sisae.PaEncTb05_GuardarEnc('101440154','JOSE MARIA','HERRERA','PORRAS','Nosara','M','87633099','josma@outlook.com','1234');
CALL sisae.PaEncTb05_GuardarEnc('101440182','MARIA ISABEL','JIMENEZ','QUIROS','Los Angeles','F','89679099','marisa@outlook.com','1234');
CALL sisae.PaEncTb05_GuardarEnc('101450787','JAVIER','ROJAS','AGUERO','Nosara','F','87669099','jav@gmail.com','1234');
CALL sisae.PaEncTb05_GuardarEnc('101460065','MARIA FRANCISCA','MORA','ELIZONDO','Los Angeles','F','87600099','mfran@outlook.com','1234');
CALL sisae.PaEncTb05_GuardarEnc('101460864','JAIME','ROJAS','JIMENEZ','Nicoya','M','87669099','jai@outlook.com','1234');
CALL sisae.PaEncTb05_GuardarEnc('101460943','YOLANDA','PERAZA','MONGE','Nicoya','F','67541233','yol@gmail.com','1234');
CALL sisae.PaEncTb05_GuardarEnc('101490236','SARA','RODRIGUEZ','RODRIGUEZ','Nosara','F','88765690','sara@gmail.com','1234');
CALL sisae.PaEncTb05_GuardarEnc('101500013','DAISY','QUIROS','SANTAMARIA','Nicoya','F','88765690','sara@gmail.com','1234');
CALL sisae.PaEncTb05_GuardarEnc('101500657','ADORACION','GOMEZ','MORA','Nosara','F','88765690','sara@gmail.com','1234');

CALL sisae.PaEncTb05_GuardarEnc('101510355','RAFAEL MAXIMO','QUIROS','SALAZAR','Nosara','M','88765690','sara@gmail.com','1234');
CALL sisae.PaEncTb05_GuardarEnc('101510370','ROSALINA','PORRAS','AVALOS','Nosara','F','88765690','sara@gmail.com','1234');
CALL sisae.PaEncTb05_GuardarEnc('101520079','AUSTELINA','AGUERO','GOMEZ','Nosara','F','88765690','sara@gmail.com','1234');
CALL sisae.PaEncTb05_GuardarEnc('101530549','ERNESTO','GONZALEZ','ALVAREZ','Nosara','M','88765690','sara@gmail.com','1234');
CALL sisae.PaEncTb05_GuardarEnc('101570851','BENEDICTO','AGUERO','CASTILLO','Nosara','M','88765690','sara@gmail.com','1234');
CALL sisae.PaEncTb05_GuardarEnc('101600906','FILOMENA','MORA','AGUERO','Nosara','F','88765690','sara@gmail.com','1234');
CALL sisae.PaEncTb05_GuardarEnc('101610042','CLARA','VENEGAS','MORA','Nosara','F','88765690','sara@gmail.com','1234');
CALL sisae.PaEncTb05_GuardarEnc('101611004','APODEMIO ','ROBLES','ROJAS','Nosara','M','88765690','sara@gmail.com','1234');
CALL sisae.PaEncTb05_GuardarEnc('101620004','ANGELA','ARIAS','MONTERO','Nosara','F','88765690','sara@gmail.com','1234');
CALL sisae.PaEncTb05_GuardarEnc('101620131','ELODIA','MORA','GOMEZ','Nosara','F','88765690','sara@gmail.com','1234');

CALL sisae.PaEncTb05_GuardarEnc('101620408','FERNANDO','VILLALOBOS','VILLALOBOS','Nosara','M','88765690','sara@gmail.com','1234');
CALL sisae.PaEncTb05_GuardarEnc('101630925','ABEL ','MENA','PEREZ','Nosara','M','88765690','sara@gmail.com','1234');
CALL sisae.PaEncTb05_GuardarEnc('101640366','ABEL','ROJAS','TENORIO','Nosara','M','88765690','sara@gmail.com','1234');
CALL sisae.PaEncTb05_GuardarEnc('101640853','OLGA','CHAVES','VARGAS','Nosara','M','88765690','sara@gmail.com','1234');
CALL sisae.PaEncTb05_GuardarEnc('101670472','FRANCISCA','BRENES','SOLANO','Nosara','M','88765690','sara@gmail.com','1234');
CALL sisae.PaEncTb05_GuardarEnc('101670863','VICTOR MANUEL','MASIS','MASIS','Nosara','M','88765690','sara@gmail.com','1234');
CALL sisae.PaEncTb05_GuardarEnc('101680222','VIRGINIA','FONSECA','ALVARADO','Nosara','M','88765690','sara@gmail.com','1234');
CALL sisae.PaEncTb05_GuardarEnc('101680855','MARIA HORTENSIA','ESPINOZA','AGUERO','Nosara','M','88765690','sara@gmail.com','1234');
CALL sisae.PaEncTb05_GuardarEnc('101700931','DORALIA','MUÑOZ','LOBO','Nosara','M','88765690','sara@gmail.com','1234');
CALL sisae.PaEncTb05_GuardarEnc('101730128','JESUS','RAMIREZ','BEGNOZZI','Nosara','M','88765690','sara@gmail.com','1234');

CALL sisae.PaEncTb05_GuardarEnc('101730153','JOSE HUMBERTO','MATARRITA','MATARRITA','Nosara','M','88765690','sara@gmail.com','1234');
CALL sisae.PaEncTb05_GuardarEnc('101730478','MARIA TERESA','JIMENEZ','MARIN','Nosara','M','88765690','sara@gmail.com','1234');
CALL sisae.PaEncTb05_GuardarEnc('101750234','ROSA','MUÑOZ','BADILLA','Nosara','M','88765690','sara@gmail.com','1234');
CALL sisae.PaEncTb05_GuardarEnc('101760685','ELODIA','HERNANDEZ','NAVARRO','Nosara','M','88765690','sara@gmail.com','1234');
CALL sisae.PaEncTb05_GuardarEnc('101770499','ALFREDO','BADILLA','MARIN','Nosara','M','88765690','sara@gmail.com','1234');
CALL sisae.PaEncTb05_GuardarEnc('101780456','JOSE JESUS','RAMIREZ','FALLAS','Nosara','M','88765690','sara@gmail.com','1234');
CALL sisae.PaEncTb05_GuardarEnc('101780517','ZENEIDA','SILES','MONGE','Nosara','M','88765690','sara@gmail.com','1234');
CALL sisae.PaEncTb05_GuardarEnc('101780518','RICARDO','ROJAS','TENORIO','Nosara','M','88765690','sara@gmail.com','1234');
CALL sisae.PaEncTb05_GuardarEnc('101780672','ROSA ADILIA','CALDERON','CHAVES','Nosara','M','88765690','sara@gmail.com','1234');
CALL sisae.PaEncTb05_GuardarEnc('101780918','MERCEDES','PINTO','GONZALEZ','Nosara','M','88765690','sara@gmail.com','1234');

	/* Profesor Tb04 */
CALL PaProfTb04_GuardarProf('102410145','1993/10/04','1234','A','HARRY','JENKINS','CHAVARRIA','Santa Clara','F','60918664','fina@outlook.com');
CALL PaProfTb04_GuardarProf('102410237','1993/10/04','1234','A','CECILIA','PORTILLA','IBARRA','Santa Clara','F','60918664','fina@outlook.com');
CALL PaProfTb04_GuardarProf('102410877','1993/10/04','1234','A','FRANCISCA ELENA','PAVON','PAVON','Santa Clara','F','60918664','fina@outlook.com');
CALL PaProfTb04_GuardarProf('102420116','1993/10/04','1234','A','ANTONIO','FERNANDEZ ','SALAZAR','Santa Clara','F','60918664','fina@outlook.com');
CALL PaProfTb04_GuardarProf('102420633','1993/10/04','1234','A','LUIS ALBERTO','BRENES','CORDERO','Santa Clara','F','60918664','fina@outlook.com');
CALL PaProfTb04_GuardarProf('102430085','1993/10/04','1234','A','MARIA TERESA','AGUILAR','DELGADO','Santa Clara','F','60918664','fina@outlook.com');
CALL PaProfTb04_GuardarProf('102430416','1993/10/04','1234','A','LIGIA','MONTOYA','MONTOYA','Santa Clara','F','60918664','fina@outlook.com');
CALL PaProfTb04_GuardarProf('102430649','1993/10/04','1234','A','MIGUEL','ARAYA','MATAMOROS','Santa Clara','F','60918664','fina@outlook.com');
CALL PaProfTb04_GuardarProf('102430963','1993/10/04','1234','A','RAFAEL','CARDENAS ','OBANDO','Santa Clara','F','60918664','fina@outlook.com');
CALL PaProfTb04_GuardarProf('102431003','1993/10/04','1234','A','GILBERT','ALFARO','CORRALES','Santa Clara','F','60918664','fina@outlook.com');

CALL PaProfTb04_GuardarProf('102440210','1993/10/04','1234','A','EMILIO','MONTURIOL','MUÑOZ','Santa Clara','F','60918664','fina@outlook.com');
CALL PaProfTb04_GuardarProf('102440360','1993/10/04','1234','A','ERNESTO','DONINELLI','FONSECA ','Santa Clara','F','60918664','fina@outlook.com');
CALL PaProfTb04_GuardarProf('102440685','1993/10/04','1234','A','JOSE MANUEL','MORA','FERNANDEZ','Santa Clara','F','60918664','fina@outlook.com');
CALL PaProfTb04_GuardarProf('102440846','1993/10/04','1234','A','MAXIMINO','DIAZ','TREJOS','Santa Clara','F','60918664','fina@outlook.com');
CALL PaProfTb04_GuardarProf('102450942','1993/10/04','1234','A','MARIA LUISA','JIMENEZ','BOLAÑOS','Santa Clara','F','60918664','fina@outlook.com');
CALL PaProfTb04_GuardarProf('102460080','1993/10/04','1234','A','VICTORIANO','MENA','VENEGAS','Santa Clara','F','60918664','fina@outlook.com');
CALL PaProfTb04_GuardarProf('102460603','1993/10/04','1234','A','MARGARITA','ARANA','GOMEZ','Santa Clara','F','60918664','fina@outlook.com');
CALL PaProfTb04_GuardarProf('102460900','1993/10/04','1234','A','ALICE ANGELA','ALVARADO','VARGAS','Santa Clara','F','60918664','fina@outlook.com');
CALL PaProfTb04_GuardarProf('102460911','1993/10/04','1234','A','VICTOR MANUEL','MONGE','SEGURA','Santa Clara','F','60918664','fina@outlook.com');
CALL PaProfTb04_GuardarProf('102470131','1993/10/04','1234','A','EDGAR','CHAVES','GUERRERO','Santa Clara','F','60918664','fina@outlook.com');

CALL PaProfTb04_GuardarProf('102470140','1993/10/04','1234','A','MARIA EMILIA','ARGUEDAS','JIMENEZ ','Santa Clara','F','60918664','fina@outlook.com');
CALL PaProfTb04_GuardarProf('102470488','1993/10/04','1234','A','RAMON ALBERTO','AGUERO','GOMEZ','Santa Clara','F','60918664','fina@outlook.com');
CALL PaProfTb04_GuardarProf('102470911','1993/10/04','1234','A','FRANCISCO','DELGADO','DELGADO','Santa Clara','F','60918664','fina@outlook.com');
CALL PaProfTb04_GuardarProf('102480242','1993/10/04','1234','A','MIRYAM','GARRO','CASTRO','Santa Clara','F','60918664','fina@outlook.com');
CALL PaProfTb04_GuardarProf('102480337','1993/10/04','1234','A','ELIETH','VALVERDE','SALAZAR','Santa Clara','F','60918664','fina@outlook.com');
CALL PaProfTb04_GuardarProf('102480340','1993/10/04','1234','A','BERSABE','FONSECA','CHACON','Santa Clara','F','60918664','fina@outlook.com');
CALL PaProfTb04_GuardarProf('102480483','1993/10/04','1234','A','MIGUEL ANGEL','RAMIREZ','CASTRO ','Santa Clara','F','60918664','fina@outlook.com');
CALL PaProfTb04_GuardarProf('102480563','1993/10/04','1234','A','OSCAR ANTONIO','PERALTA','ARROYO','Santa Clara','F','60918664','fina@outlook.com');
CALL PaProfTb04_GuardarProf('102480570','1993/10/04','1234','A','SOLEDAD','BONILLA','BONILLA','Santa Clara','F','60918664','fina@outlook.com');
CALL PaProfTb04_GuardarProf('102480611','1993/10/04','1234','A','JUAN','SILES','MONGE','Santa Clara','F','60918664','fina@outlook.com');

CALL PaProfTb04_GuardarProf('102480641','1993/10/04','1234','A','JORGE','ZUÑIGA','RODRIGUEZ','Santa Clara','F','60918664','fina@outlook.com');
CALL PaProfTb04_GuardarProf('102480645','1993/10/04','1234','A','ORLANDO','VASQUEZ','MESEN','Santa Clara','F','60918664','fina@outlook.com');
CALL PaProfTb04_GuardarProf('102480711','1993/10/04','1234','A','MANUEL FRANCISCO','CHAMORRO','ROVERSI ','Santa Clara','F','60918664','fina@outlook.com');
CALL PaProfTb04_GuardarProf('102480769','1993/10/04','1234','A','ISMELDA OBELIA','FERNANDEZ','RODRIGUEZ ','Santa Clara','F','60918664','fina@outlook.com');
CALL PaProfTb04_GuardarProf('102490205','1993/10/04','1234','A','LUZMILDA','MUÑOZ','SANDOVAL','Santa Clara','F','60918664','fina@outlook.com');
CALL PaProfTb04_GuardarProf('102490271','1993/10/04','1234','A','VICTORIA','ALFARO','RODRIGUEZ','Santa Clara','F','60918664','fina@outlook.com');
CALL PaProfTb04_GuardarProf('102490650','1993/10/04','1234','A','ALICE','OROZCO','HERNANDEZ','Santa Clara','F','60918664','fina@outlook.com');
CALL PaProfTb04_GuardarProf('102500066','1993/10/04','1234','A','JOSE LUIS','ZUÑIGA','ZUÑIGA ','Santa Clara','F','60918664','fina@outlook.com');
CALL PaProfTb04_GuardarProf('102500113','1993/10/04','1234','A','ROSA MERCEDES','NEIRA','FUERTES','Santa Clara','F','60918664','fina@outlook.com');
CALL PaProfTb04_GuardarProf('102500339','1993/10/04','1234','A','BERNARDITA','RETANA','ROJAS  ','Santa Clara','F','60918664','fina@outlook.com');

CALL PaProfTb04_GuardarProf('102510012','1993/10/04','1234','A','ROSA','JIMENEZ','MONTERO','Santa Clara','F','60918664','fina@outlook.com');
CALL PaProfTb04_GuardarProf('102510350','1993/10/04','1234','A','SONIA ANTONIA','SABATINI','FALLAS','Santa Clara','F','60918664','fina@outlook.com');
CALL PaProfTb04_GuardarProf('102510493','1993/10/04','1234','A','CARLOS ALBERTO ','NUÑEZ','ACEVEDO ','Santa Clara','F','60918664','fina@outlook.com');
CALL PaProfTb04_GuardarProf('102510899','1993/10/04','1234','A','MANUEL ANTONIO ','VILLALTA','MORA','Santa Clara','F','60918664','fina@outlook.com');
CALL PaProfTb04_GuardarProf('102510952','1993/10/04','1234','A','YOLANDA','GARRO','CHAVARRIA','Santa Clara','F','60918664','fina@outlook.com');
CALL PaProfTb04_GuardarProf('102520652','1993/10/04','1234','A','GUIDO','DURAN','FALLAS ','Santa Clara','F','60918664','fina@outlook.com');
CALL PaProfTb04_GuardarProf('102530189','1993/10/04','1234','A','JORGE EDUARDO','CASTRO','DINALTES','Santa Clara','F','60918664','fina@outlook.com');
CALL PaProfTb04_GuardarProf('102530213','1993/10/04','1234','A','SOCORRO','AGUERO','JIMENEZ','Santa Clara','F','60918664','fina@outlook.com');
CALL PaProfTb04_GuardarProf('102530214','1993/10/04','1234','A','YOLANDA ','JIMENEZ','GONZALEZ','Santa Clara','F','60918664','fina@outlook.com');
CALL PaProfTb04_GuardarProf('102530619','1993/10/04','1234','A','MARTA CECILIA','AGUILAR','CONTRERAS ','Santa Clara','F','60918664','fina@outlook.com');

	/* Estudiante */
CALL PaEstTb03_GuardarEst('102580300','1993/10/04','No','A',1,'TERESA','ARCE','VILLEGAS','Santa Clara','F','60918664','fina@outlook.com');
CALL PaEstTb03_GuardarEst('102580760','1993/10/04','No_significativa','A',2,'MARIA DE LOS ANGELES','CARVAJAL','SABORIO','Santa Clara','F','60918664','fina@outlook.com');
CALL PaEstTb03_GuardarEst('102580844','1993/10/04','Acceso','A',3,'CECILIO','BADILLA','GUEVARA','Santa Clara','F','60918664','fina@outlook.com');
CALL PaEstTb03_GuardarEst('102590364','1993/10/04','Acceso','A',8,'OMAR','TORRES','BERMUDEZ','Santa Clara','F','60918664','fina@outlook.com');
CALL PaEstTb03_GuardarEst('102590781','1993/10/04','No_significativa','A',7,'MIGUEL ANGEL','BARRIENTOS','MONGE','Santa Clara','F','60918664','fina@outlook.com');
CALL PaEstTb03_GuardarEst('102590965','1993/10/04','Significativa','A',4,'CARMEN LIA','CASTRO','FERNANDEZ','Santa Clara','F','60918664','fina@outlook.com');
CALL PaEstTb03_GuardarEst('102590988','1993/10/04','No','A',5,'LUZ BELEN','FALLAS','LOPEZ','Santa Clara','F','60918664','fina@outlook.com');
CALL PaEstTb03_GuardarEst('102591009','1993/10/04','Acceso','A',1,'FLORY','GAMBOA','AGUERO','Santa Clara','F','60918664','fina@outlook.com');
CALL PaEstTb03_GuardarEst('102600023','1993/10/04','Significativa','A',3,'RODRIGO','LEON','SOTO','Santa Clara','F','60918664','fina@outlook.com');
CALL PaEstTb03_GuardarEst('102600045','1993/10/04','No','A',4,'FLORY','CALDERON','CALDERON','Santa Clara','F','60918664','fina@outlook.com');

CALL PaEstTb03_GuardarEst('102600163','1993/10/04','No_significativa','A',6,'MARIA MIREYA','MORA','BERROCAL','Santa Clara','F','60918664','fina@outlook.com');
CALL PaEstTb03_GuardarEst('102600221','1993/10/04','Acceso','A',8,'JOSE LUIS','VARGAS','CHACON  ','Santa Clara','F','60918664','fina@outlook.com');
CALL PaEstTb03_GuardarEst('102600279','1993/10/04','No','A',9,'GILBERT','SEQUEIRA','ORTIZ','Santa Clara','F','60918664','fina@outlook.com');
CALL PaEstTb03_GuardarEst('102600934','1993/10/04','No_significativa','A',11,'MARIA MELIDA','MENDEZ','BERMUDEZ ','Santa Clara','F','60918664','fina@outlook.com');
CALL PaEstTb03_GuardarEst('102610165','1993/10/04','Acceso','A',5,'OVIDIO','ROJAS','AGUERO','Santa Clara','F','60918664','fina@outlook.com');
CALL PaEstTb03_GuardarEst('102610217','1993/10/04','No','A',7,'FRANKLIN','CALDERON','OROZCOS','Santa Clara','F','60918664','fina@outlook.com');
CALL PaEstTb03_GuardarEst('102610244','1993/10/04','Significativa','A',9,'OSTELINA','CUBERO','ROJAS','Santa Clara','F','60918664','fina@outlook.com');
CALL PaEstTb03_GuardarEst('102610521','1993/10/04','Significativa','A',8,'EMERITA','ALVARADO','SANCHEZ','Santa Clara','F','60918664','fina@outlook.com');
CALL PaEstTb03_GuardarEst('102610764','1993/10/04','No_significativa','A',5,'DANIEL ALBERTO','RUIZ','MUÑOZ','Santa Clara','F','60918664','fina@outlook.com');
CALL PaEstTb03_GuardarEst('102620222','1993/10/04','No','A',11,'ALVARO','CASTRO','RODRIGUEZ','Santa Clara','F','60918664','fina@outlook.com');

	/* Especialidad Tb16 */
CALL PaEspecialidadTb16_GuardarEspecialidad('Informatica', 30);
CALL PaEspecialidadTb16_GuardarEspecialidad('Contabilidad', 15);
CALL PaEspecialidadTb16_GuardarEspecialidad('AyB', 20);
CALL PaEspecialidadTb16_GuardarEspecialidad('Turismo', 14);
CALL PaEspecialidadTb16_GuardarEspecialidad('Agropecuaria', 20);
CALL PaEspecialidadTb16_GuardarEspecialidad('Secretariado', 15);
CALL PaEspecialidadTb16_GuardarEspecialidad('Electrónica', 15);
CALL PaEspecialidadTb16_GuardarEspecialidad( 'Redes', 20);

	/* Bachiller Tb14 */
CALL PaBachillerTb14_GuardarBachiller('Internacional');
CALL PaBachillerTb14_GuardarBachiller('Nacional');

	/* Materia Tb17 */
CALL PaMateriaTb17_GuardarMateria( 'Español');
CALL PaMateriaTb17_GuardarMateria('Matematicas');
CALL PaMateriaTb17_GuardarMateria( 'Estudios Sociales');
CALL PaMateriaTb17_GuardarMateria('Ciencias');
CALL PaMateriaTb17_GuardarMateria( 'Inglés');
CALL PaMateriaTb17_GuardarMateria('Educación Física');
CALL PaMateriaTb17_GuardarMateria( 'Religión');
CALL PaMateriaTb17_GuardarMateria( 'Cívica');
CALL PaMateriaTb17_GuardarMateria('Francés');
CALL PaMateriaTb17_GuardarMateria( 'Química');
CALL PaMateriaTb17_GuardarMateria( 'Física');
CALL PaMateriaTb17_GuardarMateria( 'Biología');

	/* Funcionario Tb06 */
CALL PaFunTb06_GuardarFunc('102620342','1234','1978/03/06', 'Activo', 'RIGOBERTO','CHINCHILLA','CHINCHILLA','Samara','M','88674699','franc@gmail.com');
CALL PaFunTb06_GuardarFunc('102620585','1234','1978/03/06', 'Activo', 'JORGE','MORA','SIBAJA','Samara','M','88674699','franc@gmail.com');
CALL PaFunTb06_GuardarFunc('102630207','1234','1978/03/06', 'Activo', 'FILIBERTO','JIMENEZ','JIMENEZ','Samara','M','88674699','franc@gmail.com');
CALL PaFunTb06_GuardarFunc('102630280','1234','1978/03/06', 'Activo', 'HUMBERTINO','MONGE','TENORIO','Samara','M','88674699','franc@gmail.com');
CALL PaFunTb06_GuardarFunc('102630326','1234','1978/03/06', 'Activo', 'CLOTILDE','JIMENEZ','CERDAS','Samara','M','88674699','franc@gmail.com');
CALL PaFunTb06_GuardarFunc('102640244','1234','1978/03/06', 'Activo', 'JOSE MARIA','SOLANO','CHAVARRIA','Samara','M','88674699','franc@gmail.com');
CALL PaFunTb06_GuardarFunc('102640504','1234','1978/03/06', 'Activo', 'SOLEDAD','NUÑEZ','ACEVEDO','Samara','M','88674699','franc@gmail.com');
CALL PaFunTb06_GuardarFunc('102640511','1234','1978/03/06', 'Activo', 'FABIO','CHACON','FALLAS','Samara','M','88674699','franc@gmail.com');
CALL PaFunTb06_GuardarFunc('102640553','1234','1978/03/06', 'Activo', 'NOEMY','MORA','MORA','Samara','M','88674699','franc@gmail.com');
CALL PaFunTb06_GuardarFunc('102640785','1234','1978/03/06', 'Activo', 'FRANCISCO','MARCHENA','ACOSTA','Samara','M','88674699','franc@gmail.com');

CALL PaFunTb06_GuardarFunc('102640868','1234','1978/03/06', 'Activo', 'DIANA','MORAN','AYALES','Samara','M','88674699','franc@gmail.com');
CALL PaFunTb06_GuardarFunc('102650516','1234','1978/03/06', 'Activo', 'HUGO','MONTERO','NAVARRO','Samara','M','88674699','franc@gmail.com');
CALL PaFunTb06_GuardarFunc('102650590','1234','1978/03/06', 'Activo', 'PABLO','CASTELLON','ALVAREZ','Samara','M','88674699','franc@gmail.com');
CALL PaFunTb06_GuardarFunc('102660149','1234','1978/03/06', 'Activo', 'ELOY MARIO','JIMENEZ','ROIG','Samara','M','88674699','franc@gmail.com');
CALL PaFunTb06_GuardarFunc('102660616','1234','1978/03/06', 'Activo', 'VIRGILIO','VILLARREAL','MONTERO','Samara','M','88674699','franc@gmail.com');
CALL PaFunTb06_GuardarFunc('102670579','1234','1978/03/06', 'Activo', 'VIRGINIA','MURILLO','CRUZ','Samara','M','88674699','franc@gmail.com');
CALL PaFunTb06_GuardarFunc('102670588','1234','1978/03/06', 'Activo', 'ANA LUZ','SANCHEZ','DIAZ','Samara','M','88674699','franc@gmail.com');
CALL PaFunTb06_GuardarFunc('102670768','1234','1978/03/06', 'Activo', 'PLINIO','RAMIREZ','CHACON','Samara','M','88674699','franc@gmail.com');
CALL PaFunTb06_GuardarFunc('102671001','1234','1978/03/06', 'Activo', 'CARLOS','REYES','PADILLA ','Samara','M','88674699','franc@gmail.com');
CALL PaFunTb06_GuardarFunc('102680355','1234','1978/03/06', 'Activo','JESUS','MARTINEZ','URTUBIA','Samara','M','88674699','franc@gmail.com');

    /* Grado Tb13 */
CALL PaGradoTb13_GuardarGrado('10',1);
CALL PaGradoTb13_GuardarGrado('11',2);
INSERT INTO `gradotb13` (`InGradoTb13_IdGrado`, `VcGradoTb13_NombreGrado`, `InBachillerTb14_IdBachiller`) VALUES
('6', 'Setimo', '1'),
('7', 'Octavo', '2');

INSERT INTO `admtb02` (`VcAdmTb02_IdAdmin`, `VcAdmTb02_Clave`) VALUES
('102220111', 'asdf');

INSERT INTO `seguridadtb31` (`VcSeguridadTb31_Funcion`, `VcSeguridadTb31_Glyphicons`, `VcSeguridadTb31_SideNav`, `InSeguridadTb31_Id`, `InSeguridadTb31_Nivel`)
VALUES
('function principal(){$(\"#contenido\").load(\'Vista/Seg_Nivel/Nivel_1/principal.php\');}', /* Inicio */
'<li> <a class=\"glyphicon glyphicon-home\" style=\"margin-top:25px; \" href=\"index.php\"></a></li>',
'<a href=\"index.php\">Inicio</a>', 1, 1),

('function profesor(){$(\"#contenido\").load(\'Vista/Seg_Nivel/Nivel_1/Profesor.php\');}', /* Profesor */
' <li><a class=\"glyphicon glyphicon-blackboard\" style=\"margin-top:15px; \" href=\"#\" onclick=\"profesor();\"></a></li>', 
'<a href=\"#\" onclick=\"profesor();\">Profesores</a>', 2, 1),

('function seccion(){$(\"#contenido\").load(\'Vista/Seg_Nivel/Nivel_1/Seccion-Grupo.php\');}', /* Seccion */
'<li><a class=\"glyphicon glyphicon-sound-7-1\" style=\"margin-top:15px; \" href=\"#\" onclick=\"seccion();\"></a></li>', 
'<a href=\"#\" onclick=\"seccion();\">Secciones</a>', 4, 1),

('function encargado(){$(\"#contenido\").load(\'Vista/Seg_Nivel/Nivel_1/Encargado.php\');}', /* Encargado */
'<li><a class=\"glyphicon glyphicon-eye-open\" style=\"margin-top:15px; \" href=\"#\" onclick=\"encargado();\"></a></li>', 
'<a href=\"#\" onclick=\"encargado();\">Padres</a>', 5, 1),

('function funcionario(){$(\"#contenido\").load(\'Vista/Seg_Nivel/Nivel_1/Funcionario.php\');}', /* Funcionario */
'<li><a class=\"glyphicon glyphicon-user\" style=\"margin-top:15px; \" href=\"#\" onclick=\"funcionario();\"></a></li>', 
'<a href=\"#\" onclick=\"funcionario();\">Funcionarios</a>', 6, 1),

('function estudiante(){$(\"#contenido\").load(\'Vista/Seg_Nivel/Nivel_1/Estudiante.php\');}', 
'<li><a class=\"glyphicon glyphicon-education\" style=\"margin-top:15px; \" href=\"#\" onclick=\"estudiante();\"></a></li>', 
'<a href=\"#\" onclick=\"estudiante();\">Estudiantes</a>', 7, 1),

('function materia(){$(\"#contenido\").load(\'Vista/Seg_Nivel/Nivel_1/Materia.php\');}', /* Materia */
' <li><a class=\"glyphicon glyphicon-book\" style=\"margin-top:15px; \" href=\"#\" onclick=\"materia();\"></a></li>', 
'<a href=\"#\" onclick=\"materia();\">Materias</a>', 8, 1),

('function principal(){\r\n$(\'#contenido\').load(\'Vista/Seg_Nivel/Nivel_2/Asistencia.php\');\r\n}', 'nada', 'nada', 9, 2)

('function encargado(){\r\n$(\'#contenido\').load(\'Vista/Seg_Nivel/Nivel_3/Encargado.php\');\r\n}', '', '', 10, 3);

('function grado(){\r\n$(\'#contenido\').load(\'Vista/Seg_Nivel/Nivel_1/Grado.php\');}', 
'<li><a class="glyphicon glyphicon-file" style="margin-top:15px; " href="#" onclick="grado();"></a></li>',
' <a href="#" onclick="grado();">Grado</a>', 11, 1);

 ('function bachiller(){\r\n$(\'#contenido\').load(\'Vista/Seg_Nivel/Nivel_1/Bachiller.php\');}', 
 '<li><a class="glyphicon glyphicon-list-alt" style="margin-top:15px; " href="#" onclick="bachiller();"></a></li>', 
 '<a href="#" onclick="bachiller();">Bachiller</a>', 12, 1);

('function horario(){\r\n$(\'#contenido\').load(\'Vista/Seg_Nivel/Nivel_1/Horarios.php\');}', 
'<li><a class="glyphicon glyphicon-tasks" style="margin-top:15px; "href="#" onclick="horario();"></a></li>', 
'<a href="#" onclick="horario();">Horarios</a>', 13, 1);

('function GrupoUsuario(){\r\n$(\'#contenido\').load(\'Vista/Seg_Nivel/Nivel_1/GrupoUsuario.php\');}
function Usuario(){\r\n$(\'#contenido\').load(\'Vista/Seg_Nivel/Nivel_1/Usuario.php\');}',
'<li><a class="glyphicon glyphicon-wrench" style="margin-top:15px; "href="#" onclick="GrupoUsuario();"></a></li>',
'<button class="dropdown-btn">Adm Accesos</button>
<div class="dropdown-container"><a href="#" onclick="GrupoUsuario();">Grupo Usuarios</a><a href="#" onclick="Usuario();">Usuarios</a></div>' , 14, 1);




CALL PaEstEncTb07_AsignarEstEn('101230816', '102580844');
CALL PaEstEncTb07_AsignarEstEn('101074994', '102580760');
CALL PaEstEncTb07_AsignarEstEn('101074994', '102580300');

INSERT INTO `asistclasetb18` 
(`InAsistClaseTb18_IdAsistClase`, `DtAsistClaseTb18_Fecha`, `TmAsistClaseTb18_Hora`, `VcAsistClaseTb18_Estado`, `InMateriaTb17_IdMateria`) 
VALUES
(1, '2017-11-17', '05:42:44', 'Presente', '1'),
(2, '2017-11-17', '05:42:44', 'Ausente', '2'),
(3, '2017-11-17', '05:42:44', 'Presente', '27'),
(4, '2017-11-17', '05:42:44', 'Presente', '3'),
(5, '2017-11-17', '05:42:44', 'Presente', '28');

INSERT INTO `asistesttb23` (`InAsistClaseTb18_IdAsistClase`, `VcEstTb03_IdEstudiante`) VALUES
(1, '102580300'),
(2, '102580760'),
(3, '102580844');

INSERT INTO `graesttb26` (`VcEstTb03_IdEstudiante`, `InGradoTb13_IdGrado`) VALUES
('102580844', '5');

INSERT INTO `secciontb20` (`InSeccionTb20_IdSeccion`, `InSeccionTb20_Cupo`, `InSeccionTb20_Num_Grupo`) VALUES
(5, 30, 2),
(8, 25, 4),
(3, 20, 1);

INSERT INTO `secesttb28` (`VcEstTb03_IdEstudiante`, `InSeccionTb20_IdSeccion`) VALUES
('102580300', 5),
('102580760', 1),
('102580844', 14);

INSERT INTO `secgradotb25` (`InGradoTb13_IdGrado`, `InSeccionTb20_IdSeccion`) VALUES
('6', 5),
('7', 8);

DELIMITER $$ 